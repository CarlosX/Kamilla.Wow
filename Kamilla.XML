<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Kamilla</name>
    </assembly>
    <members>
        <member name="T:Kamilla.TypeManager">
            <summary>
            Provides an interface to manage types in the default application domain.
            </summary>
        </member>
        <member name="M:Kamilla.TypeManager.Initialize">
            <summary>
            Initializes the <see cref="T:Kamilla.TypeManager"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="T:Kamilla.TypeManager"/> must be initialized
            in the default application domain.
            </exception>
        </member>
        <member name="P:Kamilla.TypeManager.Types">
            <summary>
            Gets all the custom types loaded into the default application domain.
            </summary>
        </member>
        <member name="M:Kamilla.Win32.DeleteObject(System.IntPtr)">
            <summary>
            Deletes a GDI object.
            </summary>
            <param name="hObject">
            The GDI object to delete.
            </param>
            <returns>
            true if the deletion succeded; otherwise, false.
            </returns>
        </member>
        <member name="T:Kamilla.Network.PacketFlags">
            <summary>
            Represents flags of a <see cref="T:Kamilla.Network.Packet"/>.
            </summary>
        </member>
        <member name="F:Kamilla.Network.PacketFlags.None">
            <summary>
            No flags defined.
            </summary>
        </member>
        <member name="F:Kamilla.Network.PacketFlags.Custom">
            <summary>
            The packet wasn't emitted by the marked sender.
            </summary>
        </member>
        <member name="F:Kamilla.Network.PacketFlags.Freezed">
            <summary>
            The packet hasn't reached it's destination.
            </summary>
        </member>
        <member name="F:Kamilla.Network.PacketFlags.Trailing">
            <summary>
            The packet is extracted from a TCP packet.
            </summary>
        </member>
        <member name="F:Kamilla.Network.PacketFlags.Fragmented">
            <summary>
            The packet is extracted from multiple TCP packets.
            </summary>
        </member>
        <member name="F:Kamilla.Network.PacketFlags.All">
            <summary>
            Specifies all available options of the <see cref="T:Kamilla.Network.PacketFlags"/> enum.
            </summary>
        </member>
        <member name="T:Kamilla.StringExtensions">
            <summary>
            Contains string extension methods.
            </summary>
        </member>
        <member name="M:Kamilla.StringExtensions.Escape(System.String,System.Char)">
            <summary>
            Escapes a character with a backslash.
            </summary>
            <param name="input">The input string.</param>
            <param name="symbol">The character to escape.</param>
            <returns>The input string with the character escaped.</returns>
            <exception cref="T:System.ArgumentNullException">
            input is null.
            </exception>
        </member>
        <member name="M:Kamilla.StringExtensions.EscapeQuotes(System.String)">
            <summary>
            Escapes single and double quotes in the input string.
            </summary>
            <param name="input">The input string.</param>
            <returns>The input string with escaped quotes.</returns>
            <exception cref="T:System.ArgumentNullException">
            input is null.
            </exception>
        </member>
        <member name="M:Kamilla.StringExtensions.EscapeMysqlSpecial(System.String)">
            <summary>
            Escapes special mysql characters: % and _
            </summary>
            <param name="input">The input string.</param>
            <returns>The input string escapes characters.</returns>
            <exception cref="T:System.ArgumentNullException">
            input is null.
            </exception>
        </member>
        <member name="M:Kamilla.StringExtensions.EscapeMysql(System.String)">
            <summary>
            Escapes all characters that may interfere with a query: " % _ '
            </summary>
            <param name="input">The input string.</param>
            <returns>The input string with escaped characters.</returns>
            <exception cref="T:System.ArgumentNullException">
            input is null.
            </exception>
        </member>
        <member name="M:Kamilla.StringExtensions.AsByteArray(System.String)">
            <summary>
            Parses the byte array represented by a string.
            </summary>
            <param name="input">The input string that contains a byte array.</param>
            <returns>The parsed byte array.</returns>
            <exception cref="T:System.ArgumentNullException">
            input is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            input is invalid string.
            </exception>
        </member>
        <member name="M:Kamilla.StringExtensions.AsByteArray(System.String,System.Boolean)">
            <summary>
            Parses the byte array represented by a string.
            </summary>
            <param name="input">The input string that contains a byte array.</param>
            <param name="allowWhiteSpace">
            Indicates whether whitespace characters should be skipped or not.
            </param>
            <returns>The parsed byte array.</returns>
            <exception cref="T:System.ArgumentNullException">
            input is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            input is invalid string.
            </exception>
        </member>
        <member name="M:Kamilla.StringExtensions.Urlize(System.String)">
            <summary>
            Urlizes a string, removing all characters except letters, numbers, underscore and minus.
            </summary>
            <param name="input">The input string to be urlized.</param>
            <returns>The urlized string.</returns>
        </member>
        <member name="M:Kamilla.StringExtensions.StartsWith(System.String,System.Char)">
            <summary>
            Determines whether the first character of this
            string instance matches the specified character.
            </summary>
            <param name="input">The original string.</param>
            <param name="value">The character to compare.</param>
            <returns>true if value matches the beginning of this string; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
        </member>
        <member name="M:Kamilla.StringExtensions.StartsWith(System.String,System.Char,System.Boolean,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the first character of this string instance matches
            the specified character when compared using the specified culture.
            </summary>
            <param name="input">The original string.</param>
            <param name="value">The character to compare.</param>
            <param name="ignoreCase">true to ignore case during the comparison; otherwise, false.</param>
            <param name="culture">
            Cultural information that determines how this string and value are compared.
            If culture is null, the current culture is used.
            </param>
            <returns>true if value matches the beginning of this string; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
        </member>
        <member name="M:Kamilla.StringExtensions.StartsWith(System.String,System.Char,System.StringComparison)">
            <summary>
            Determines whether the first character of this string instance matches
            the specified character when compared using the specified comparison option.
            </summary>
            <param name="input">The original string.</param>
            <param name="value">The character to compare.</param>
            <param name="comparisonType">
            One of the enumeration values that determines
            how this string and value are compared.
            </param>
            <returns>true if value matches the beginning of this string; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
        </member>
        <member name="M:Kamilla.StringExtensions.EndsWith(System.String,System.Char)">
            <summary>
            Determines whether the last character of this
            string instance matches the specified character.
            </summary>
            <param name="input">The original string.</param>
            <param name="value">The character to compare.</param>
            <returns>true if value matches the end of this string; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
        </member>
        <member name="M:Kamilla.StringExtensions.EndsWith(System.String,System.Char,System.Boolean,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the last character of this string instance matches
            the specified character when compared using the specified culture.
            </summary>
            <param name="input">The original string.</param>
            <param name="value">The character to compare.</param>
            <param name="ignoreCase">true to ignore case during the comparison; otherwise, false.</param>
            <param name="culture">
            Cultural information that determines how this string and value are compared.
            If culture is null, the current culture is used.
            </param>
            <returns>true if value matches the end of this string; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
        </member>
        <member name="M:Kamilla.StringExtensions.EndsWith(System.String,System.Char,System.StringComparison)">
            <summary>
            Determines whether the last character of this string instance matches
            the specified character when compared using the specified comparison option.
            </summary>
            <param name="input">The original string.</param>
            <param name="value">The character to compare.</param>
            <param name="comparisonType">
            One of the enumeration values that determines
            how this string and value are compared.
            </param>
            <returns>true if value matches the end of this string; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
        </member>
        <member name="T:Kamilla.Network.TransferDirection">
            <summary>
            Defines data transfer directions.
            </summary>
        </member>
        <member name="F:Kamilla.Network.TransferDirection.ToServer">
            <summary>
            Represents Client-to-Server data transfer direction.
            </summary>
        </member>
        <member name="F:Kamilla.Network.TransferDirection.ToClient">
            <summary>
            Represents Server-to-Client data transfer direction.
            </summary>
        </member>
        <member name="T:Kamilla.Network.NetworkStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Kamilla.Network.NetworkStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Kamilla.Network.NetworkStrings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Kamilla.Network.NetworkStrings.AllFiles">
            <summary>
              Looks up a localized string similar to All Files.
            </summary>
        </member>
        <member name="P:Kamilla.Network.NetworkStrings.bytes">
            <summary>
              Looks up a localized string similar to {0} {0?plural-en:byte:bytes}.
            </summary>
        </member>
        <member name="P:Kamilla.Network.NetworkStrings.BytesRead">
            <summary>
              Looks up a localized string similar to {0} out of {1} {1?plural-en:byte:bytes} read.
            </summary>
        </member>
        <member name="P:Kamilla.Network.NetworkStrings.CH_C2S">
            <summary>
              Looks up a localized string similar to C-&gt;S.
            </summary>
        </member>
        <member name="P:Kamilla.Network.NetworkStrings.CH_Length">
            <summary>
              Looks up a localized string similar to Length.
            </summary>
        </member>
        <member name="P:Kamilla.Network.NetworkStrings.CH_Number">
            <summary>
              Looks up a localized string similar to #.
            </summary>
        </member>
        <member name="P:Kamilla.Network.NetworkStrings.CH_S2C">
            <summary>
              Looks up a localized string similar to S-&gt;C.
            </summary>
        </member>
        <member name="P:Kamilla.Network.NetworkStrings.CH_Ticks">
            <summary>
              Looks up a localized string similar to Ticks.
            </summary>
        </member>
        <member name="P:Kamilla.Network.NetworkStrings.CH_Time">
            <summary>
              Looks up a localized string similar to Time.
            </summary>
        </member>
        <member name="P:Kamilla.Network.NetworkStrings.NetworkLog_KRPDv1">
            <summary>
              Looks up a localized string similar to KRPD v1.
            </summary>
        </member>
        <member name="P:Kamilla.Network.NetworkStrings.NetworkLog_KRPDv2">
            <summary>
              Looks up a localized string similar to KRPD v2.
            </summary>
        </member>
        <member name="P:Kamilla.Network.NetworkStrings.ParserClass">
            <summary>
              Looks up a localized string similar to Parser: {0}.
            </summary>
        </member>
        <member name="P:Kamilla.Network.NetworkStrings.ParserException">
            <summary>
              Looks up a localized string similar to Exception in parser:.
            </summary>
        </member>
        <member name="P:Kamilla.Network.NetworkStrings.Protocol_Default">
            <summary>
              Looks up a localized string similar to Default Protocol.
            </summary>
        </member>
        <member name="T:Kamilla.EnumExtensions">
            <summary>
            Contains extensions to <see cref="T:System.Enum"/> types.
            </summary>
        </member>
        <member name="M:Kamilla.EnumExtensions.ToInt64(System.Enum)">
            <summary>
            Converts the provided enum value to <see cref="T:System.Int64"/>.
            </summary>
            <param name="enm">
            Enum value to convert to <see cref="T:System.Int64"/>.
            </param>
            <returns>
            Enum value converted to <see cref="T:System.Int64"/>.
            </returns>
        </member>
        <member name="M:Kamilla.EnumExtensions.GetLocalizedName(System.Enum)">
            <summary>
            Gets the display name defined by <see cref="T:Kamilla.LocalizedNameAttribute"/>
            for the specified value of an enumeration.
            </summary>
            <param name="enm">
            Value of an enumeration.
            </param>
            <returns>
            The display name provided by <see cref="T:Kamilla.LocalizedNameAttribute"/>
            if exists; otherwise, name of the field.
            </returns>
        </member>
        <member name="T:Kamilla.Network.Logging.NetworkLog">
            <summary>
            Represents a storage of network packets.
            </summary>
        </member>
        <member name="F:Kamilla.Network.Logging.NetworkLog.m_stream">
            <summary>
            File stream handler in Writing/Reading modes.
            </summary>
        </member>
        <member name="F:Kamilla.Network.Logging.NetworkLog.m_isLoaded">
            <summary>
            Indicates whether the dump loaded from stream or file.
            </summary>
        </member>
        <member name="M:Kamilla.Network.Logging.NetworkLog.#ctor(Kamilla.Network.Logging.NetworkLogMode)">
            <summary>
            Initializes a new instance of <see cref="T:Kamilla.Network.Logging.NetworkLog"/> class
            in the specified <see cref="T:Kamilla.Network.Logging.NetworkLogMode"/>.
            </summary>
            <param name="mode">
            The <see cref="T:Kamilla.Network.Logging.NetworkLogMode"/> in which
            to open the <see cref="T:Kamilla.Network.Logging.NetworkLog"/>.
            </param>
            <exception cref="T:System.ArgumentException">
            mode is invalid.
            </exception>
        </member>
        <member name="M:Kamilla.Network.Logging.NetworkLog.AddPacket(Kamilla.Network.Packet)">
            <summary>
            Adds a <see cref="T:Kamilla.Network.Packet"/> to the
            current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>.
            </summary>
            <param name="packet">
            Instance of <see cref="T:Kamilla.Network.Packet"/> that should be added to the
            current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
            packet is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>
            was opened in <see cref="F:Kamilla.Network.Logging.NetworkLogMode.Reading"/> mode.
            </exception>
            <exception cref="T:System.IO.IOException">
            The mode is <see cref="F:Kamilla.Network.Logging.NetworkLogMode.Writing"/>
            and an I/O exception occured while writing packet.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The mode is <see cref="F:Kamilla.Network.Logging.NetworkLogMode.Writing"/> and
            the underlying <see cref="T:System.IO.Stream"/> is closed.
            </exception>
        </member>
        <member name="M:Kamilla.Network.Logging.NetworkLog.InternalAddPacket(Kamilla.Network.Packet)">
            <summary>
            Adds a <see cref="T:Kamilla.Network.Packet"/> to the internal packet
            storage of the current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>.
            </summary>
            <param name="packet">
            Instance of <see cref="T:Kamilla.Network.Packet"/> that should be added to the
            current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>.
            </param>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>
            was opened in <see cref="F:Kamilla.Network.Logging.NetworkLogMode.Writing"/> mode.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            packet is null.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The current instance of <see cref="T:Kamilla.Network.Logging.NetworkLog"/> is disposed.
            </exception>
        </member>
        <member name="M:Kamilla.Network.Logging.NetworkLog.OnPacketAdded(Kamilla.Network.Packet)">
            <summary>
            Fires the <see cref="E:Kamilla.Network.Logging.NetworkLog.PacketAdded"/> event.
            </summary>
            <param name="packet">
            The <see cref="T:Kamilla.Network.Packet"/> that was added to
            the current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
            packet is null.
            </exception>
        </member>
        <member name="M:Kamilla.Network.Logging.NetworkLog.OpenForWriting(System.String)">
            <summary>
            Opens the specified file for writing.
            </summary>
            <param name="filename">
            Name of the file to open.
            </param>
            <exception cref="T:System.ArgumentNullException">
            filename is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Failed to open file with the specified name.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O exception occured.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>
            was not opened in <see cref="F:Kamilla.Network.Logging.NetworkLogMode.Writing"/> mode.
            -or-
            A stream is already opened.
            </exception>
        </member>
        <member name="M:Kamilla.Network.Logging.NetworkLog.OpenForWriting(System.IO.Stream)">
            <summary>
            Opens the specified <see cref="T:System.IO.Stream"/> for writing.
            </summary>
            <param name="stream">
            The <see cref="T:System.IO.Stream"/> to open for writing.
            </param>
            <exception cref="T:System.ArgumentNullException">
            stream is null.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O exception occured.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>
            was not opened in <see cref="F:Kamilla.Network.Logging.NetworkLogMode.Writing"/> mode.
            -or-
            A stream is already opened.
            </exception>
        </member>
        <member name="M:Kamilla.Network.Logging.NetworkLog.WriteMetaData">
            <summary>
            When implemented in a derived class, writes meta data of the current
            <see cref="T:Kamilla.Network.Logging.NetworkLog"/> to the underlying stream.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>
            was not opened in <see cref="F:Kamilla.Network.Logging.NetworkLogMode.Writing"/> mode.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O exception occured.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The mode is <see cref="F:Kamilla.Network.Logging.NetworkLogMode.Writing"/> and
            the underlying <see cref="T:System.IO.Stream"/> is closed.
            </exception>
        </member>
        <member name="M:Kamilla.Network.Logging.NetworkLog.InternalWriteMetaData">
            <summary>
            When implemented in a derived class, writes meta data of the current
            <see cref="T:Kamilla.Network.Logging.NetworkLog"/> to the underlying stream.
            </summary>
        </member>
        <member name="M:Kamilla.Network.Logging.NetworkLog.InternalWritePacket(Kamilla.Network.Packet)">
            <summary>
            When implemented in a derived class, writes a
            <see cref="T:Kamilla.Network.Packet"/> to the underlying stream.
            </summary>
            <param name="packet">
            Instance of <see cref="T:Kamilla.Network.Packet"/> that
            should be written to the underlying stream.
            </param>
        </member>
        <member name="M:Kamilla.Network.Logging.NetworkLog.Save(System.String)">
            <summary>
            Saves the current <see cref="T:Kamilla.Network.Logging.NetworkLog"/> to a file.
            </summary>
            <param name="filename">
            Name of the file to save into.
            </param>
            <exception cref="T:System.ArgumentNullException">
            filename is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Failed to open file with the specified name.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O exception occured.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>
            was not opened in <see cref="F:Kamilla.Network.Logging.NetworkLogMode.Abstract"/> mode.
            </exception>
        </member>
        <member name="M:Kamilla.Network.Logging.NetworkLog.Save(System.IO.Stream)">
            <summary>
            Saves the current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>
            to a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">
            The <see cref="T:System.IO.Stream"/> to save the
            current <see cref="T:Kamilla.Network.Logging.NetworkLog"/> to.
            </param>
            <exception cref="T:System.ArgumentNullException">
            stream is null.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O exception occured.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>
            was not opened in <see cref="F:Kamilla.Network.Logging.NetworkLogMode.Abstract"/> mode.
            </exception>
        </member>
        <member name="M:Kamilla.Network.Logging.NetworkLog.InternalSave(System.IO.Stream)">
            <summary>
            When implemented in a derived class, saves the whole
            <see cref="T:Kamilla.Network.Logging.NetworkLog"/> to a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">
            The <see cref="T:System.IO.Stream"/> to save the
            current <see cref="T:Kamilla.Network.Logging.NetworkLog"/> to.
            </param>
        </member>
        <member name="M:Kamilla.Network.Logging.NetworkLog.OpenForReading(System.String)">
            <summary>
            Opens a file for reading.
            </summary>
            <param name="filename">
            Name of the file to open for reading.
            </param>
            <exception cref="T:System.ArgumentNullException">
            filename is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Failed to open file with the specified name.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O exception occured.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>
            was not opened in <see cref="F:Kamilla.Network.Logging.NetworkLogMode.Reading"/> mode.
            -or-
            A stream is already opened.
            -or-
            The current <see cref="T:Kamilla.Network.Logging.NetworkLog"/> is already loaded.
            </exception>
        </member>
        <member name="M:Kamilla.Network.Logging.NetworkLog.OpenForReading(System.IO.Stream,System.Boolean)">
            <summary>
            Opens the specified <see cref="T:System.IO.Stream"/> for reading.
            </summary>
            <param name="stream">
            The <see cref="T:System.IO.Stream"/> to open for reading.
            </param>
            <param name="closeStream">
            Indicates whether the <see cref="T:System.IO.Stream"/> should be
            closed when the reading is complete.
            </param>
            <exception cref="T:System.ArgumentNullException">
            stream is null.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O exception occured.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>
            was not opened in <see cref="F:Kamilla.Network.Logging.NetworkLogMode.Reading"/> mode.
            -or-
            A stream is already opened.
            -or-
            The current <see cref="T:Kamilla.Network.Logging.NetworkLog"/> is already loaded.
            </exception>
        </member>
        <member name="M:Kamilla.Network.Logging.NetworkLog.Read">
            <summary>
            Reads the contents of the underlying stream.
            </summary>
            <exception cref="T:System.IO.IOException">
            An I/O exception occured.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>
            was not opened in <see cref="F:Kamilla.Network.Logging.NetworkLogMode.Reading"/> mode.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The underlying <see cref="T:System.IO.Stream"/> is closed.
            </exception>
        </member>
        <member name="M:Kamilla.Network.Logging.NetworkLog.Read(System.Action{System.Int32})">
            <summary>
            Reads the contents of the underlying stream and reports progress if can.
            </summary>
            <param name="reportProgressDelegate">
            Delegate to report progress with. The argument is progress in percents (0-100).
            </param>
            <exception cref="T:System.IO.IOException">
            An I/O exception occured.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>
            was not opened in <see cref="F:Kamilla.Network.Logging.NetworkLogMode.Reading"/> mode.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The underlying <see cref="T:System.IO.Stream"/> is closed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            reportProgressDelegate is null.
            </exception>
        </member>
        <member name="M:Kamilla.Network.Logging.NetworkLog.CloseStream">
            <summary>
            Closes the underlying <see cref="T:System.IO.Stream"/> of the current
            instance of <see cref="T:Kamilla.Network.Logging.NetworkLog"/>.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Logging.NetworkLog.Name">
            <summary>
            Gets the localized name of the current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Logging.NetworkLog.Capacity">
            <summary>
            Gets or sets the number of packets the internal
            data structure can contain without resizing.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>
            was opened in <see cref="F:Kamilla.Network.Logging.NetworkLogMode.Writing"/> mode.
            -or-
            The accessor is set and the current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>
            was opened in <see cref="F:Kamilla.Network.Logging.NetworkLogMode.Reading"/> mode.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The accessor is set and the value is less than the number of packets
            contained in the current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The current instance of <see cref="T:Kamilla.Network.Logging.NetworkLog"/> is disposed.
            </exception>
        </member>
        <member name="P:Kamilla.Network.Logging.NetworkLog.Count">
            <summary>
            Gets the number of packets currently stored inside
            the current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>
            was opened in <see cref="F:Kamilla.Network.Logging.NetworkLogMode.Writing"/> mode.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The current instance of <see cref="T:Kamilla.Network.Logging.NetworkLog"/> is disposed.
            </exception>
        </member>
        <member name="P:Kamilla.Network.Logging.NetworkLog.Mode">
            <summary>
            Gets the <see cref="T:Kamilla.Network.Logging.NetworkLogMode"/> in which
            the current <see cref="T:Kamilla.Network.Logging.NetworkLog"/> was opened.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Logging.NetworkLog.Packets">
            <summary>
            Gets the packets that are stored inside the current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>
            was opened in <see cref="F:Kamilla.Network.Logging.NetworkLogMode.Writing"/> mode.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The current instance of <see cref="T:Kamilla.Network.Logging.NetworkLog"/> is disposed.
            </exception>
        </member>
        <member name="P:Kamilla.Network.Logging.NetworkLog.SuggestedProtocol">
            <summary>
            Gets the <see cref="T:Kamilla.Network.Protocols.ProtocolWrapper"/> of a protocol
            that is most likely the real network protocol of the stored packets in the log.
            </summary>
        </member>
        <member name="E:Kamilla.Network.Logging.NetworkLog.PacketAdded">
            <summary>
            Occurs when a packet is added to the current <see cref="T:Kamilla.Network.Logging.NetworkLog"/>.
            </summary>
        </member>
        <member name="T:Kamilla.Network.Viewing.ViewerItemEventHandler">
            <summary>
            Represents the method that handles an event
            related to a <see cref="T:Kamilla.Network.Viewing.ViewerItem"/>.
            </summary>
            <param name="sender">
            The object that raised the event.
            </param>
            <param name="e">
            Information about the event.
            </param>
        </member>
        <member name="T:Kamilla.Network.Viewing.ViewerItemEventArgs">
            <summary>
            Provides data for an event related to a <see cref="T:Kamilla.Network.Viewing.ViewerItem"/>.
            </summary>
        </member>
        <member name="M:Kamilla.Network.Viewing.ViewerItemEventArgs.#ctor(Kamilla.Network.Viewing.ViewerItem)">
            <summary>
            Initializes a new instance of <see cref="T:Kamilla.Network.Viewing.ViewerItemEventArgs"/>
            for the specified <see cref="T:Kamilla.Network.Viewing.ViewerItem"/>.
            </summary>
            <param name="item">
            The <see cref="T:Kamilla.Network.Viewing.ViewerItem"/> related to the event.
            </param>
        </member>
        <member name="P:Kamilla.Network.Viewing.ViewerItemEventArgs.Item">
            <summary>
            Gets the <see cref="T:Kamilla.Network.Viewing.ViewerItem"/> related to the event.
            </summary>
        </member>
        <member name="T:Kamilla.Network.Parsing.PacketParser">
            <summary>
            Provides an interface to convert instances of
            <see cref="T:Kamilla.Network.Packet"/> to
            human-understandable representation.
            </summary>
        </member>
        <member name="F:Kamilla.Network.Parsing.PacketParser.Reader">
            <summary>
            Gets the <see cref="T:Kamilla.IO.StreamHandler"/> used to read
            contents of the underlying <see cref="T:Kamilla.Network.Packet"/>.
            </summary>
            <remarks>
            Intentionally left as a field.
            </remarks>
        </member>
        <member name="F:Kamilla.Network.Parsing.PacketParser.Output">
            <summary>
            Gets the <see cref="T:System.Text.StringBuilder"/> used to create the output text.
            </summary>
            <remarks>
            Intentionally left as a field.
            </remarks>
        </member>
        <member name="M:Kamilla.Network.Parsing.PacketParser.InternalParse">
            <summary>
            When implemented in a derived class, performs the interpreting
            operations on the underlying <see cref="T:Kamilla.Network.Packet"/>.
            </summary>
        </member>
        <member name="M:Kamilla.Network.Parsing.PacketParser.Parse">
            <summary>
            Interprets the underlying <see cref="T:Kamilla.Network.Packet"/>.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Parsing.PacketParser.Item">
            <summary>
            Gets the <see cref="T:Kamilla.Network.Viewing.ViewerItem"/> to which
            the current <see cref="T:Kamilla.Network.Parsing.PacketParser"/> is attached.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Parsing.PacketParser.Packet">
            <summary>
            Exposes access to an underlying <see cref="T:Kamilla.Network.Packet"/>
            of the current <see cref="T:Kamilla.Network.Parsing.PacketParser"/>.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Parsing.PacketParser.Log">
            <summary>
            Exposes access to an underlying <see cref="T:Kamilla.Network.Logging.NetworkLog"/>
            of the current <see cref="T:Kamilla.Network.Parsing.PacketParser"/>.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Parsing.PacketParser.IsParsed">
            <summary>
            Gets a value indicating whether the current instance
            of <see cref="T:Kamilla.Network.Parsing.PacketParser"/> has finished
            interpreting the underlying <see cref="T:Kamilla.Network.Packet"/>.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Parsing.PacketParser.ParsingError">
            <summary>
            Gets a value indicating whether an error occured while
            interpreting the underlying <see cref="T:Kamilla.Network.Packet"/>.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Parsing.PacketParser.ParsedText">
            <summary>
            Gets the text result of the underlying <see cref="T:Kamilla.Network.Packet"/> interpretation.
            
            This value can be null.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Parsing.PacketParser.ContainedData">
            <summary>
            Gets the data that is contained in the underlying <see cref="T:Kamilla.Network.Packet"/>.
            
            This value can be null.
            </summary>
        </member>
        <member name="T:Kamilla.Network.Logging.NetworkLogAttribute">
            <summary>
            Defines variables required to handle a packet dump reading class.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Logging.NetworkLogAttribute.FileExtension">
            <summary>
            Gets or sets the file extension of the underlying dump reader format.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Logging.NetworkLogAttribute.HeaderChars">
            <summary>
            Gets or sets header chars which a packet dump of the selected format should contain.
            
            When this property is set, the char array is converted into byte array, and HeaderBytes property is set.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Logging.NetworkLogAttribute.HeaderString">
            <summary>
            Gets or sets header string which a packet dump of the selected format should contain.
            
            When this property is set, the string is converted into byte array, and HeaderBytes property is set.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Logging.NetworkLogAttribute.HeaderBytes">
            <summary>
            Gets or sets the header bytes which a packet dump of the selected format should contain.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Logging.NetworkLogAttribute.Flags">
            <summary>
            Gets or sets the <see cref="T:Kamilla.Network.Logging.NetworkLogFlags"/> of the underlying packet dump reading class.
            </summary>
        </member>
        <member name="T:Kamilla.Configuration">
            <summary>
            Stores configuration options.
            </summary>
        </member>
        <member name="M:Kamilla.Configuration.GetValue``1(System.String,``0)">
            <summary>
            Gets the value of an option from the configuration file.
            </summary>
            <typeparam name="T">
            Type of the value.
            </typeparam>
            <param name="name">
            Name of the configuration option.
            </param>
            <param name="defaultValue">
            Default value of the option.
            </param>
            <returns>
            Value of the option if found; otherwise, defaultValue.
            </returns>
        </member>
        <member name="M:Kamilla.Configuration.SetValue(System.String,System.Object)">
            <summary>
            Sets the value for a configuration option.
            </summary>
            <param name="name">
            Name of the configuration option.
            </param>
            <param name="value">
            Value of the configuration option.
            </param>
        </member>
        <member name="T:Kamilla.CollectionExtensions">
            <summary>
            Contains collection extension methods.
            </summary>
        </member>
        <member name="M:Kamilla.CollectionExtensions.ToStringJoin``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Concatenates the string representations of members of a collection,
            using the specified separator between each member.
            </summary>
            <typeparam name="T">The type of the members of values.</typeparam>
            <param name="values">A collection that contains the objects to concatenate.</param>
            <param name="separator">The separator to use between each member.</param>
            <returns>
            A string that consists of the members of values delimited by the separator string.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            values is null.
            </exception>
        </member>
        <member name="M:Kamilla.CollectionExtensions.ToStringJoin``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Concatenates the string representations of members of a collection,
            using a comma as a separator.
            </summary>
            <typeparam name="T">The type of the members of values.</typeparam>
            <param name="values">A collection that contains the objects to concatenate.</param>
            <returns>
            A string that consists of the members of values delimited by a comma.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            values is null.
            </exception>
        </member>
        <member name="M:Kamilla.CollectionExtensions.AddRange``1(System.Collections.Generic.List{``0},System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Adds the specified number of elements of the specified collection
            to the end of the <see cref="T:System.Collections.Generic.List`1"/>.
            </summary>
            <typeparam name="T">
            Type of elements of the <see cref="T:System.Collections.Generic.List`1"/>.
            </typeparam>
            <param name="list">
            The <see cref="T:System.Collections.Generic.List`1"/> to which
            the elements should be added.
            </param>
            <param name="collection">
            The collection whose elements should be added to the end
            of the <see cref="T:System.Collections.Generic.List`1"/>.
            </param>
            <param name="count">
            Number of elements of the collection to add to the end
            of the <see cref="T:System.Collections.Generic.List`1"/>.
            </param>
        </member>
        <member name="M:Kamilla.CollectionExtensions.AddRange``1(System.Collections.Generic.List{``0},System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            Adds the specified number of elements starting from the specified index of the specified
            collection to the end of the <see cref="T:System.Collections.Generic.List`1"/>.
            </summary>
            <typeparam name="T">
            Type of elements of the <see cref="T:System.Collections.Generic.List`1"/>.
            </typeparam>
            <param name="list">
            The <see cref="T:System.Collections.Generic.List`1"/> to which
            the elements should be added.
            </param>
            <param name="startIndex">
            Index of the first item in the collection whose elements should be added to the end
            of the <see cref="T:System.Collections.Generic.List`1"/>.
            </param>
            <param name="collection">
            The collection whose elements should be added to the end
            of the <see cref="T:System.Collections.Generic.List`1"/>.
            </param>
            <param name="count">
            Number of elements of the collection to add to the end
            of the <see cref="T:System.Collections.Generic.List`1"/>.
            </param>
        </member>
        <member name="M:Kamilla.CollectionExtensions.GetValueOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0)">
            <summary>
            Gets the value associated with the specified key if one exists.
            </summary>
            <typeparam name="TKey">
            Type of the key of the dictionary.
            </typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dictionary">
            The dictionary to look for value in.
            </param>
            <param name="key">
            Key of the value.
            </param>
            <returns>
            Value associated with the specified key if one exists; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            dictionary is null.
            </exception>
        </member>
        <member name="M:Kamilla.CollectionExtensions.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Determines if the elements of two collections are equal using the specified equality comparer.
            </summary>
            <typeparam name="T">
            Element type of the collections.
            </typeparam>
            <param name="collection">
            First collection to compare elements in.
            </param>
            <param name="collection2">
            Second collection to compare elements in.
            </param>
            <param name="comparer">
            Equality comparer for the elements of the collections.
            </param>
            <returns>
            true if the elements of the collections are equal according to
            the specified equality comparer; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            collection is null, or collection2 is null, or comparer is null.
            </exception>
        </member>
        <member name="M:Kamilla.CollectionExtensions.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines if the elements of two collections are equal using the default equality comparer.
            </summary>
            <typeparam name="T">
            Element type of the collections.
            </typeparam>
            <param name="collection">
            First collection to compare elements in.
            </param>
            <param name="collection2">
            Second collection to compare elements in.
            </param>
            <returns>
            true if the elements of the collections are equal according to
            the default equality comparer; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            collection is null, or collection2 is null.
            </exception>
        </member>
        <member name="M:Kamilla.CollectionExtensions.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Determines if the specified number of elements of two collections
            starting from the specified indices are equal using the specified equality comparer.
            </summary>
            <typeparam name="T">
            Element type of the collections.
            </typeparam>
            <param name="collection">
            First collection to compare elements in.
            </param>
            <param name="collection2">
            Second collection to compare elements in.
            </param>
            <param name="index">
            Index of the first element to compare in the first collection.
            </param>
            <param name="index2">
            Index of the second element to compare in the first collection.
            </param>
            <param name="count">
            Number of elements to compare in the collections.
            </param>
            <param name="comparer">
            Equality comparer for the elements of the collections.
            </param>
            <returns>
            true if the specified number of elements of the collections starting from the specified
            indices are equal according to the specified equality comparer; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            collection is null, or collection2 is null, or comparer is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            index, index2, and count represent invalid sequences for the collections.
            </exception>
        </member>
        <member name="M:Kamilla.CollectionExtensions.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Determines if the elements of two collections
            starting from the specified indices are equal using the specified equality comparer.
            </summary>
            <typeparam name="T">
            Element type of the collections.
            </typeparam>
            <param name="collection">
            First collection to compare elements in.
            </param>
            <param name="collection2">
            Second collection to compare elements in.
            </param>
            <param name="index">
            Index of the first element to compare in the first collection.
            </param>
            <param name="index2">
            Index of the second element to compare in the first collection.
            </param>
            <param name="comparer">
            Equality comparer for the elements of the collections.
            </param>
            <returns>
            true if the elements of the collections starting from the specified
            indices are equal according to the specified equality comparer; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            collection is null, or collection2 is null, or comparer is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            index and index2 represent invalid sequences for the collections.
            </exception>
        </member>
        <member name="M:Kamilla.CollectionExtensions.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            Determines if the elements of two collections
            starting from the specified indices are equal using the default equality comparer.
            </summary>
            <typeparam name="T">
            Element type of the collections.
            </typeparam>
            <param name="collection">
            First collection to compare elements in.
            </param>
            <param name="collection2">
            Second collection to compare elements in.
            </param>
            <param name="index">
            Index of the first element to compare in the first collection.
            </param>
            <param name="index2">
            Index of the second element to compare in the first collection.
            </param>
            <returns>
            true if the elements of the collections starting from the specified
            indices are equal according to the default equality comparer; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            collection is null, or collection2 is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            index and index2 represent invalid sequences for the collections.
            </exception>
        </member>
        <member name="M:Kamilla.CollectionExtensions.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32,System.Int32)">
            <summary>
            Determines if the specified number of elements of two collections
            starting from the specified indices are equal using the default equality comparer.
            </summary>
            <typeparam name="T">
            Element type of the collections.
            </typeparam>
            <param name="collection">
            First collection to compare elements in.
            </param>
            <param name="collection2">
            Second collection to compare elements in.
            </param>
            <param name="index">
            Index of the first element to compare in the first collection.
            </param>
            <param name="index2">
            Index of the second element to compare in the first collection.
            </param>
            <param name="count">
            Number of elements to compare in the collections.
            </param>
            <returns>
            true if the specified number of elements of the collections starting from the specified
            indices are equal according to the default equality comparer; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            collection is null, or collection2 is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            index, index2, and count represent invalid sequences for the collections.
            </exception>
        </member>
        <member name="M:Kamilla.CollectionExtensions.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Determines if the specified number of elements of two collections
            are equal using the default equality comparer.
            </summary>
            <typeparam name="T">
            Element type of the collections.
            </typeparam>
            <param name="collection">
            First collection to compare elements in.
            </param>
            <param name="collection2">
            Second collection to compare elements in.
            </param>
            <param name="count">
            Number of elements to compare in the collections.
            </param>
            <returns>
            true if the specified number of elements of the collections are equal according
            to the default equality comparer; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            collection is null, or collection2 is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            There are less than count elements in one of the collections.
            </exception>
        </member>
        <member name="M:Kamilla.CollectionExtensions.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Int32,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Determines if the specified number of elements of two collections
            are equal using the specified equality comparer.
            </summary>
            <typeparam name="T">
            Element type of the collections.
            </typeparam>
            <param name="collection">
            First collection to compare elements in.
            </param>
            <param name="collection2">
            Second collection to compare elements in.
            </param>
            <param name="count">
            Number of elements to compare in the collections.
            </param>
            <param name="comparer">
            Equality comparer for the elements of the collections.
            </param>
            <returns>
            true if the specified number of elements of the collections are equal according
            to the specified equality comparer; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            collection is null, or collection2 is null, or comparer is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            There are less than count elements in one of the collections.
            </exception>
        </member>
        <member name="M:Kamilla.CollectionExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Searches for the specified object and returns the zero-based index of the
            first occurrence within the entire <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <typeparam name="T">
            Element type of the collection.
            </typeparam>
            <param name="collection">
            The collection to find the equal item in.
            </param>
            <param name="value">
            The object to locate in the <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            The value can be null for reference types.
            </param>
            <returns>
            The zero-based index of the first occurrence of item within the entire
            <see cref="T:System.Collections.Generic.IEnumerable`1"/>, if found; otherwise, –1.
            </returns>
        </member>
        <member name="M:Kamilla.CollectionExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
            <summary>
            Reports the index of the first matching item in a collection.
            </summary>
            <typeparam name="T">
            Element type of the collection.
            </typeparam>
            <param name="collection">
            The collection to find matching items in.
            </param>
            <param name="pred">
            Predicate which must be matched by the item.
            </param>
            <returns>
            Index of the first matching item; if none found, -1.
            </returns>
        </member>
        <member name="T:Kamilla.Vector3">
            <summary>
            Represents a 2-dimensional vector.
            </summary>
        </member>
        <member name="F:Kamilla.Vector3.Zero">
            <summary>
            Represents a zero vector. This field is read-only.
            </summary>
        </member>
        <member name="F:Kamilla.Vector3.One">
            <summary>
            Represents a (1,1,1) vector. This field is read-only.
            </summary>
        </member>
        <member name="F:Kamilla.Vector3.MinusOne">
            <summary>
            Represents a (-1,-1,-1) vector. This field is read-only.
            </summary>
        </member>
        <member name="F:Kamilla.Vector3.UnitX">
            <summary>
            Represents a (1,0,0) vector. This field is read-only.
            </summary>
        </member>
        <member name="F:Kamilla.Vector3.UnitY">
            <summary>
            Represents a (0,1,0) vector. This field is read-only.
            </summary>
        </member>
        <member name="F:Kamilla.Vector3.UnitZ">
            <summary>
            Represents a (0,0,1) vector. This field is read-only.
            </summary>
        </member>
        <member name="F:Kamilla.Vector3.X">
            <summary>
            The X component of the <see cref="T:Kamilla.Vector3"/>.
            </summary>
        </member>
        <member name="F:Kamilla.Vector3.Y">
            <summary>
            The Y component of the <see cref="T:Kamilla.Vector3"/>.
            </summary>
        </member>
        <member name="F:Kamilla.Vector3.Z">
            <summary>
            The Z component of the <see cref="T:Kamilla.Vector3"/>.
            </summary>
        </member>
        <member name="M:Kamilla.Vector3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of <see cref="T:Kamilla.Vector3"/>
            with the specified vector components.
            </summary>
            <param name="x">
            The X component of the <see cref="T:Kamilla.Vector3"/>.
            </param>
            <param name="y">
            The Y component of the <see cref="T:Kamilla.Vector3"/>.
            </param>
            <param name="z">
            The Z component of the <see cref="T:Kamilla.Vector3"/>.
            </param>
        </member>
        <member name="M:Kamilla.Vector3.GetLength">
            <summary>
            Calculates the length of the <see cref="T:Kamilla.Vector3"/>.
            </summary>
            <returns>
            Length of the <see cref="T:Kamilla.Vector3"/>.
            </returns>
        </member>
        <member name="M:Kamilla.Vector3.op_Multiply(Kamilla.Vector3,System.Single)">
            <summary>
            Multiplies a <see cref="T:Kamilla.Vector3"/> and a scalar value.
            </summary>
            <param name="vector">
            The <see cref="T:Kamilla.Vector3"/> used in the multiplication.
            </param>
            <param name="coeff">
            The scalar value used in the multiplication.
            </param>
            <returns>
            The <see cref="T:Kamilla.Vector3"/> that is a multiplication of
            the original <see cref="T:Kamilla.Vector3"/> and the scalar value.
            </returns>
        </member>
        <member name="M:Kamilla.Vector3.op_Addition(Kamilla.Vector3,Kamilla.Vector3)">
            <summary>
            Sums two instances of <see cref="T:Kamilla.Vector3"/> structure.
            </summary>
            <param name="vector1">
            First instance of <see cref="T:Kamilla.Vector3"/> structure.
            </param>
            <param name="vector2">
            Second instance of <see cref="T:Kamilla.Vector3"/> structure.
            </param>
            <returns>
            Sum of two instances of <see cref="T:Kamilla.Vector3"/> structure.
            </returns>
        </member>
        <member name="T:Kamilla.ProjectInformation">
            <summary>
            Contains constant information about the Kamilla Project.
            </summary>
        </member>
        <member name="F:Kamilla.ProjectInformation.Version">
            <summary>
            Indicates the version of the base libraries.
            </summary>
        </member>
        <member name="F:Kamilla.ProjectInformation.Title">
            <summary>
            Indicates the title name of the project.
            </summary>
        </member>
        <member name="T:Kamilla.Vector2">
            <summary>
            Represents a 2-dimensional vector.
            </summary>
        </member>
        <member name="F:Kamilla.Vector2.Zero">
            <summary>
            Represents a zero vector. This field is read-only.
            </summary>
        </member>
        <member name="F:Kamilla.Vector2.One">
            <summary>
            Represents a (1,1) vector. This field is read-only.
            </summary>
        </member>
        <member name="F:Kamilla.Vector2.MinusOne">
            <summary>
            Represents a (-1,-1) vector. This field is read-only.
            </summary>
        </member>
        <member name="F:Kamilla.Vector2.UnitX">
            <summary>
            Represents a (1,0) vector. This field is read-only.
            </summary>
        </member>
        <member name="F:Kamilla.Vector2.UnitY">
            <summary>
            Represents a (0,1) vector. This field is read-only.
            </summary>
        </member>
        <member name="F:Kamilla.Vector2.X">
            <summary>
            The X component of the <see cref="T:Kamilla.Vector2"/>.
            </summary>
        </member>
        <member name="F:Kamilla.Vector2.Y">
            <summary>
            The Y component of the <see cref="T:Kamilla.Vector2"/>.
            </summary>
        </member>
        <member name="M:Kamilla.Vector2.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of <see cref="T:Kamilla.Vector2"/>
            with the specified vector components.
            </summary>
            <param name="x">
            The X component of the <see cref="T:Kamilla.Vector2"/>.
            </param>
            <param name="y">
            The Y component of the <see cref="T:Kamilla.Vector2"/>.
            </param>
        </member>
        <member name="M:Kamilla.Vector2.GetLength">
            <summary>
            Calculates the length of the <see cref="T:Kamilla.Vector2"/>.
            </summary>
            <returns>
            Length of the <see cref="T:Kamilla.Vector2"/>.
            </returns>
        </member>
        <member name="M:Kamilla.Vector2.op_Multiply(Kamilla.Vector2,System.Single)">
            <summary>
            Multiplies a <see cref="T:Kamilla.Vector2"/> and a scalar value.
            </summary>
            <param name="vector">
            The <see cref="T:Kamilla.Vector2"/> used in the multiplication.
            </param>
            <param name="coeff">
            The scalar value used in the multiplication.
            </param>
            <returns>
            The <see cref="T:Kamilla.Vector2"/> that is a multiplication of
            the original <see cref="T:Kamilla.Vector2"/> and the scalar value.
            </returns>
        </member>
        <member name="M:Kamilla.Vector2.op_Addition(Kamilla.Vector2,Kamilla.Vector2)">
            <summary>
            Sums two instances of <see cref="T:Kamilla.Vector2"/> structure.
            </summary>
            <param name="vector1">
            First instance of <see cref="T:Kamilla.Vector2"/> structure.
            </param>
            <param name="vector2">
            Second instance of <see cref="T:Kamilla.Vector2"/> structure.
            </param>
            <returns>
            Sum of two instances of <see cref="T:Kamilla.Vector2"/> structure.
            </returns>
        </member>
        <member name="T:Kamilla.Network.Viewing.NetworkLogChangedEventHandler">
            <summary>
            Handles <see cref="E:Kamilla.Network.Viewing.NetworkLogViewerBase.NetworkLogChanged"/> event.
            </summary>
            <param name="sender">
            The current <see cref="T:Kamilla.Network.Viewing.NetworkLogViewerBase"/>.
            </param>
            <param name="e">
            An instance of <see cref="T:Kamilla.Network.Viewing.NetworkLogChangedEventArgs"/> class
            that contains the event data.
            </param>
        </member>
        <member name="T:Kamilla.Network.Viewing.NetworkLogChangedEventArgs">
            <summary>
            Contains data related to
            <see cref="E:Kamilla.Network.Viewing.NetworkLogViewerBase.NetworkLogChanged"/> event.
            </summary>
        </member>
        <member name="M:Kamilla.Network.Viewing.NetworkLogChangedEventArgs.#ctor(Kamilla.Network.Logging.NetworkLog,Kamilla.Network.Logging.NetworkLog)">
            <summary>
            Initializes a new instance of
            <see cref="T:Kamilla.Network.Viewing.NetworkLogChangedEventArgs"/> with the specified
            new and old instances of <see cref="T:Kamilla.Network.Logging.NetworkLog"/>.
            </summary>
            <param name="oldLog">
            The old instance of <see cref="T:Kamilla.Network.Logging.NetworkLog"/>.
            </param>
            <param name="newLog">
            The new instance of <see cref="T:Kamilla.Network.Logging.NetworkLog"/>.
            </param>
        </member>
        <member name="P:Kamilla.Network.Viewing.NetworkLogChangedEventArgs.OldLog">
            <summary>
            Gets the old instance of <see cref="T:Kamilla.Network.Logging.NetworkLog"/>.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Viewing.NetworkLogChangedEventArgs.NewLog">
            <summary>
            Gets the new instance of <see cref="T:Kamilla.Network.Logging.NetworkLog"/>.
            </summary>
        </member>
        <member name="T:Kamilla.Time">
            <summary>
            Contains methods to work with time-representing variables.
            </summary>
        </member>
        <member name="F:Kamilla.Time.Year">
            <summary>
            Represents a year in seconds. This field is constant.
            </summary>
        </member>
        <member name="F:Kamilla.Time.Month">
            <summary>
            Represents a month (28 days) in seconds. This field is constant.
            </summary>
        </member>
        <member name="F:Kamilla.Time.Week">
            <summary>
            Represents a week in seconds. This field is constant.
            </summary>
        </member>
        <member name="F:Kamilla.Time.Day">
            <summary>
            Represents a day in seconds. This field is constant.
            </summary>
        </member>
        <member name="F:Kamilla.Time.Hour">
            <summary>
            Represents an hour in seconds. This field is constant.
            </summary>
        </member>
        <member name="F:Kamilla.Time.Minute">
            <summary>
            Represents a minute in seconds. This field is constant.
            </summary>
        </member>
        <member name="F:Kamilla.Time.Second">
            <summary>
            Represents a single second. This field is constant.
            </summary>
        </member>
        <member name="F:Kamilla.Time.InMilliseconds">
            <summary>
            Represents a second in milliseconds. This field is constant.
            </summary>
        </member>
        <member name="F:Kamilla.Time.UnixEpoch">
            <summary>
            Represents the beginning of the Unix Epoch in local time.
            </summary>
        </member>
        <member name="M:Kamilla.Time.AsUnixTime(System.UInt32)">
            <summary>
            Converts the number of seconds passed since UTC Unix Epoch to local time.
            </summary>
            <param name="unixTimeUtc">
            Number of seconds passed since UTC Unix Epoch.
            </param>
            <returns>
            <see cref="T:System.DateTime"/> converted from UTC Unix Epoch.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The resulting <see cref="T:System.DateTime"/> is less than <see cref="F:System.DateTime.MinValue"/> or greater than <see cref="F:System.DateTime.MaxValue"/>.
            </exception>
        </member>
        <member name="M:Kamilla.Time.AsUnixTime(System.Int64)">
            <summary>
            Converts the number of seconds passed since UTC Unix Epoch to local time.
            </summary>
            <param name="unixTimeUtc">
            Number of seconds passed since UTC Unix Epoch.
            </param>
            <returns>
            <see cref="T:System.DateTime"/> converted from UTC Unix Epoch.
            </returns>
            <exception cref="T:System.ArgumentException">
            unixTimeUtc is negative.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The resulting <see cref="T:System.DateTime"/> is less than <see cref="F:System.DateTime.MinValue"/> or greater than <see cref="F:System.DateTime.MaxValue"/>.
            </exception>
        </member>
        <member name="M:Kamilla.Time.ToUnixTime(System.DateTime)">
            <summary>
            Converts the <see cref="T:System.DateTime"/> to UTC Unix Timestamp.
            </summary>
            <param name="dateTime">
            <see cref="T:System.DateTime"/> to convert to UTC Unix Timestamp.
            </param>
            <returns>
            Number of seconds passed since UTC Unix Epoch.
            </returns>
            <exception cref="T:System.ArgumentException">
            The provided <see cref="T:System.DateTime"/> cannot be converted to UTC Unix Timestamp.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            dateTime is null.
            </exception>
        </member>
        <member name="M:Kamilla.Time.ToUnixTimeOrZero(System.DateTime)">
            <summary>
            Converts the <see cref="T:System.DateTime"/> to UTC Unix Timestamp.
            </summary>
            <param name="dateTime">
            <see cref="T:System.DateTime"/> to convert to UTC Unix Timestamp.
            </param>
            <returns>
            Number of seconds passed since UTC Unix Epoch.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            dateTime is null.
            </exception>
        </member>
        <member name="M:Kamilla.Time.ToUnixTimeLong(System.DateTime)">
            <summary>
            Converts the <see cref="T:System.DateTime"/> to UTC Unix Timestamp.
            </summary>
            <param name="dateTime">
            <see cref="T:System.DateTime"/> to convert to UTC Unix Timestamp.
            </param>
            <returns>
            Number of seconds passed since UTC Unix Epoch.
            </returns>
            <exception cref="T:System.ArgumentException">
            The provided <see cref="T:System.DateTime"/> cannot be converted to UTC Unix Timestamp.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            dateTime is null.
            </exception>
        </member>
        <member name="M:Kamilla.Time.ToUnixTimeOrZeroLong(System.DateTime)">
            <summary>
            Converts the <see cref="T:System.DateTime"/> to UTC Unix Timestamp.
            </summary>
            <param name="dateTime">
            <see cref="T:System.DateTime"/> to convert to UTC Unix Timestamp.
            </param>
            <returns>
            Number of seconds passed since UTC Unix Epoch.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            dateTime is null.
            </exception>
        </member>
        <member name="T:Kamilla.Network.Viewing.NetworkLogViewerBase">
            <summary>
            Serves as a base for <see cref="T:Kamilla.Network.Logging.NetworkLog"/> viewers.
            </summary>
        </member>
        <member name="M:Kamilla.Network.Viewing.NetworkLogViewerBase.OnParsingDone(Kamilla.Network.Viewing.ViewerItem)">
            <summary>
            Fires the <see cref="E:Kamilla.Network.Viewing.NetworkLogViewerBase.ItemParsingDone"/> event
            with the specified <see cref="T:Kamilla.Network.Viewing.ViewerItem"/>.
            </summary>
            <param name="item">
            The <see cref="T:Kamilla.Network.Viewing.ViewerItem"/> whose parsing has finished.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <c>item</c> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <c>item</c> is invalid.
            </exception>
        </member>
        <member name="M:Kamilla.Network.Viewing.NetworkLogViewerBase.EnqueueParsing(Kamilla.Network.Viewing.ViewerItem)">
            <summary>
            Flags the specified <see cref="T:Kamilla.Network.Viewing.ViewerItem"/> for parsing.
            </summary>
            <param name="item">
            The <see cref="T:Kamilla.Network.Viewing.ViewerItem"/> that should be flagged for parsing.
            </param>
        </member>
        <member name="M:Kamilla.Network.Viewing.NetworkLogViewerBase.RegisterPluginCommand(Kamilla.Network.Viewing.Plugins.PluginCommand)">
            <summary>
            Registers a <see cref="T:Kamilla.Network.Viewing.Plugins.PluginCommand"/>.
            </summary>
            <param name="command">
            The <see cref="T:Kamilla.Network.Viewing.Plugins.PluginCommand"/> that should be registered.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <c>command</c> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The provided <see cref="T:Kamilla.Network.Viewing.Plugins.PluginCommand"/> is already
            registered with the current <see cref="T:Kamilla.Network.Viewing.NetworkLogViewerBase"/>.
            </exception>
        </member>
        <member name="M:Kamilla.Network.Viewing.NetworkLogViewerBase.UnregisterPluginCommand(Kamilla.Network.Viewing.Plugins.PluginCommand)">
            <summary>
            Unregisters a <see cref="T:Kamilla.Network.Viewing.Plugins.PluginCommand"/>.
            </summary>
            <param name="command">
            The <see cref="T:Kamilla.Network.Viewing.Plugins.PluginCommand"/> that should be unregistered.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <c>command</c> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The provided <see cref="T:Kamilla.Network.Viewing.Plugins.PluginCommand"/> is not
            registered with the current <see cref="T:Kamilla.Network.Viewing.NetworkLogViewerBase"/>.
            </exception>
        </member>
        <member name="E:Kamilla.Network.Viewing.NetworkLogViewerBase.ProtocolChanged">
            <summary>
            Occurs when the <see cref="P:Kamilla.Network.Viewing.NetworkLogViewerBase.CurrentProtocol"/>
            property changes.
            
            Handlers of this event should be called from any suiting thread.
            </summary>
        </member>
        <member name="E:Kamilla.Network.Viewing.NetworkLogViewerBase.NetworkLogChanged">
            <summary>
            Occurs when the <see cref="P:Kamilla.Network.Viewing.NetworkLogViewerBase.CurrentLog"/>
            property changes.
            
            Handlers of this event should be called from any suiting thread.
            </summary>
        </member>
        <member name="E:Kamilla.Network.Viewing.NetworkLogViewerBase.ItemQueried">
            <summary>
            Occurs when data of a <see cref="T:Kamilla.Network.Viewing.ViewerItem"/> is queried.
            
            Handlers of this event MUST be called from the UI thread if one exists.
            </summary>
        </member>
        <member name="E:Kamilla.Network.Viewing.NetworkLogViewerBase.ItemAdded">
            <summary>
            Occurs when a <see cref="T:Kamilla.Network.Viewing.ViewerItem"/> is added.
            
            Handlers of this event should be called from any suiting thread.
            </summary>
        </member>
        <member name="E:Kamilla.Network.Viewing.NetworkLogViewerBase.ItemParsingDone">
            <summary>
            Occurs when interpreting of contents of a
            <see cref="T:Kamilla.Network.Viewing.ViewerItem"/> is finished.
            
            Handlers of this event should be called from any suiting thread.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Viewing.NetworkLogViewerBase.InterfaceObject">
            <summary>
            Retrieves the object that is responsible for the user interface. This value can be null.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Viewing.NetworkLogViewerBase.CurrentLog">
            <summary>
            Gets the currently viewed <see cref="T:Kamilla.Network.Logging.NetworkLog"/>. This value can be null.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Viewing.NetworkLogViewerBase.CurrentProtocol">
            <summary>
            Gets the currently used <see cref="T:Kamilla.Network.Protocols.Protocol"/>. This value can be null.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Viewing.NetworkLogViewerBase.Items">
            <summary>
            Gets the collection of items currently loaded.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Viewing.NetworkLogViewerBase.WindowHandle">
            <summary>
            Gets the handle of the viewer window. This value can be <see cref="F:System.IntPtr.Zero"/>.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Viewing.NetworkLogViewerBase.SelectedItem">
            <summary>
            Gets the <see cref="T:Kamilla.Network.Viewing.ViewerItem"/> that is currently selected.
            This value can be null.
            </summary>
        </member>
        <member name="T:Kamilla.Network.Protocols.Protocol">
            <summary>
            Represents a network protocol.
            </summary>
        </member>
        <member name="F:Kamilla.Network.Protocols.Protocol.Type">
            <summary>
            Gets the <see cref="T:System.Type"/> of the <see cref="T:Kamilla.Network.Protocols.Protocol"/>.
            </summary>
        </member>
        <member name="M:Kamilla.Network.Protocols.Protocol.Load(Kamilla.Network.Viewing.NetworkLogViewerBase)">
            <summary>
            When implemented in a derived class,
            loads the current instance of <see cref="T:Kamilla.Network.Protocols.Protocol"/>
            and attachs to the provided <see cref="T:Kamilla.Network.Viewing.NetworkLogViewerBase"/>.
            
            This method MUST be called from the UI thread if one exists.
            </summary>
            <param name="viewer">
            The instance of <see cref="T:Kamilla.Network.Viewing.NetworkLogViewerBase"/> to attach to.
            </param>
            <returns>
            The <see cref="T:System.Windows.Controls.ViewBase"/> that defines the appearance of packet list.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The current instance of <see cref="T:Kamilla.Network.Protocols.Protocol"/> is already
            attached to a <see cref="T:Kamilla.Network.Viewing.NetworkLogViewerBase"/>.
            </exception>
        </member>
        <member name="M:Kamilla.Network.Protocols.Protocol.Unload">
            <summary>
            When implemented in a derived class,
            unloads and releases all resources used by
            the current instance of <see cref="T:Kamilla.Network.Protocols.Protocol"/>.
            
            This method MUST be called from the UI thread if one exists.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The current instance of <see cref="T:Kamilla.Network.Protocols.Protocol"/> is not
            attached to a <see cref="T:Kamilla.Network.Viewing.NetworkLogViewerBase"/>.
            </exception>
        </member>
        <member name="P:Kamilla.Network.Protocols.Protocol.Wrapper">
            <summary>
            Gets the <see cref="T:Kamilla.Network.Protocols.ProtocolWrapper"/> of
            the current <see cref="T:Kamilla.Network.Protocols.Protocol"/>.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Protocols.Protocol.OpcodesEnumType">
            <summary>
            Gets the <see cref="T:System.Type"/> of the opcodes enum. This value can be null.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Protocols.Protocol.Name">
            <summary>
            Gets the localized name of the current <see cref="T:Kamilla.Network.Protocols.Protocol"/>.
            </summary>
        </member>
        <member name="T:Kamilla.Network.Viewing.Plugins.PluginCommand">
            <summary>
            Represents a command to a
            <see cref="T:Kamilla.Network.Viewing.Plugins.INetworkLogViewerPlugin"/>.
            </summary>
        </member>
        <member name="M:Kamilla.Network.Viewing.Plugins.PluginCommand.#ctor(Kamilla.Network.Viewing.Plugins.INetworkLogViewerPlugin,System.String,System.Windows.Input.KeyGesture,System.Action)">
            <summary>
            Initializes a new instance of
            <see cref="T:Kamilla.Network.Viewing.Plugins.PluginCommand"/> class
            with the specified command information.
            </summary>
            <param name="plugin">
            The plugin to which the current command belongs.
            </param>
            <param name="title">
            The localized title string of the current command.
            </param>
            <param name="gesture">
            The key gesture that can be used to call the current command. This value can be null.
            </param>
            <param name="callback">
            The delegate that is called when the command is executed.
            </param>
        </member>
        <member name="P:Kamilla.Network.Viewing.Plugins.PluginCommand.Plugin">
            <summary>
            Gets the plugin to which the current command belongs.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Viewing.Plugins.PluginCommand.Title">
            <summary>
            Gets the localized title string of the current command.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Viewing.Plugins.PluginCommand.Gesture">
            <summary>
            Gets the key gesture that can be used to call the current command. This value can be null. 
            </summary>
        </member>
        <member name="P:Kamilla.Network.Viewing.Plugins.PluginCommand.Callback">
            <summary>
            Gets the delegate that is called when the command is executed.
            </summary>
        </member>
        <member name="M:Kamilla.Network.Protocols.DefaultProtocol.BaseItemData.#ctor(Kamilla.Network.Viewing.ViewerItem)">
            <summary>
            Initializes a new instance of
            <see cref="T:Kamilla.Network.Protocols.DefaultProtocol.BaseItemData"/> class.
            </summary>
            <param name="item">
            The underlying instance of <see cref="T:Kamilla.Network.Viewing.ViewerItem"/> class.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <c>item</c> is null.
            </exception>
        </member>
        <member name="M:Kamilla.Network.Protocols.DefaultProtocol.BaseItemData.Changed(System.String)">
            <summary>
            Fires the
            <see cref="E:Kamilla.Network.Protocols.DefaultProtocol.BaseItemData.PropertyChanged"/>
            event.
            </summary>
            <param name="propertyName">
            Name of the property that was changed.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <c>propertyName</c> is null.
            </exception>
        </member>
        <member name="E:Kamilla.Network.Protocols.DefaultProtocol.BaseItemData.PropertyChanged">
            <summary>
            Occurs when a property is changed.
            </summary>
        </member>
        <member name="T:Kamilla.Network.TransferDirectionExtensions">
            <summary>
            Contains extensions methods to the
            <see cref="T:Kamilla.Network.TransferDirection"/> enum.
            </summary>
        </member>
        <member name="M:Kamilla.Network.TransferDirectionExtensions.Opposite(Kamilla.Network.TransferDirection)">
            <summary>
            Returns the opposite <see cref="T:Kamilla.Network.TransferDirection"/>
            to the specified <see cref="T:Kamilla.Network.TransferDirection"/>.
            </summary>
            <param name="direction">
            The <see cref="T:Kamilla.Network.TransferDirection"/> which opposite
            <see cref="T:Kamilla.Network.TransferDirection"/> should be returned.
            </param>
            <returns>
            The <see cref="T:Kamilla.Network.TransferDirection"/> opposite
            to the provided <see cref="T:Kamilla.Network.TransferDirection"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
            direction value is invalid.
            </exception>
        </member>
        <member name="T:Kamilla.Network.Packet">
            <summary>
            Represents a single network packet.
            </summary>
        </member>
        <member name="M:Kamilla.Network.Packet.#ctor(System.Byte[],Kamilla.Network.TransferDirection)">
            <summary>
            Initializes a new instance of <see cref="T:Kamilla.Network.Packet"/> class
            with the specified data and <see cref="T:Kamilla.Network.TransferDirection"/>.
            </summary>
            <param name="data">
            Data of the new <see cref="T:Kamilla.Network.Packet"/>.
            </param>
            <param name="direction">
            <see cref="T:Kamilla.Network.TransferDirection"/> of the new <see cref="T:Kamilla.Network.Packet"/>.
            </param>
        </member>
        <member name="M:Kamilla.Network.Packet.#ctor(System.Byte[],Kamilla.Network.TransferDirection,Kamilla.Network.PacketFlags)">
            <summary>
            Initializes a new instance of <see cref="T:Kamilla.Network.Packet"/> class
            with the specified data, <see cref="T:Kamilla.Network.TransferDirection"/>,
            and <see cref="T:Kamilla.Network.PacketFlags"/>.
            </summary>
            <param name="data">
            Data of the new <see cref="T:Kamilla.Network.Packet"/>.
            </param>
            <param name="direction">
            <see cref="T:Kamilla.Network.TransferDirection"/> of the new <see cref="T:Kamilla.Network.Packet"/>.
            </param>
            <param name="flags">
            <see cref="T:Kamilla.Network.PacketFlags"/> of the new <see cref="T:Kamilla.Network.Packet"/>.
            </param>
        </member>
        <member name="M:Kamilla.Network.Packet.#ctor(System.Byte[],Kamilla.Network.TransferDirection,Kamilla.Network.PacketFlags,System.DateTime,System.UInt32)">
            <summary>
            Initializes a new instance of <see cref="T:Kamilla.Network.Packet"/> class
            with the specified data, <see cref="T:Kamilla.Network.TransferDirection"/>,
            <see cref="T:Kamilla.Network.PacketFlags"/>, and arrival time and ticks.
            </summary>
            <param name="data">
            Data of the new <see cref="T:Kamilla.Network.Packet"/>.
            </param>
            <param name="direction">
            <see cref="T:Kamilla.Network.TransferDirection"/> of the new <see cref="T:Kamilla.Network.Packet"/>.
            </param>
            <param name="flags">
            <see cref="T:Kamilla.Network.PacketFlags"/> of the new <see cref="T:Kamilla.Network.Packet"/>.
            </param>
            <param name="arrivalTicks">
            Number of milliseconds passed from the Operation System start to the packet arrival event.
            </param>
            <param name="arrivalTime">
            An instance of <see cref="T:System.DateTime"/> representing the moment when
            the packet <see cref="T:Kamilla.Network.Packet"/> arrived.
            </param>
        </member>
        <member name="P:Kamilla.Network.Packet.Direction">
            <summary>
            Gets the <see cref="T:Kamilla.Network.TransferDirection"/>
            of the current <see cref="T:Kamilla.Network.Packet"/>.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Packet.Flags">
            <summary>
            Gets the <see cref="T:Kamilla.Network.PacketFlags"/>
            of the current <see cref="T:Kamilla.Network.Packet"/>.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Packet.ArrivalTime">
            <summary>
            Gets the <see cref="T:System.DateTime"/> representing the moment when
            the <see cref="T:Kamilla.Network.Packet"/> arrived.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Packet.ArrivalTicks">
            <summary>
            Gets the number of milliseconds passed from the
            Operation System start to the <see cref="T:Kamilla.Network.Packet"/> arrival event.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Packet.Data">
            <summary>
            Gets the data of the current <see cref="T:Kamilla.Network.Packet"/>.
            </summary>
        </member>
        <member name="T:Kamilla.LocalizedNameContainerAttribute">
            <summary>
            Indicates that the localized names of the enumeration members are
            stored inside a particular <see cref="T:System.Resources.ResourceManager"/>.
            </summary>
        </member>
        <member name="M:Kamilla.LocalizedNameContainerAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of
            <see cref="T:Kamilla.LocalizedNameContainerAttribute"/> class.
            </summary>
            <param name="resourceManager">
            The <see cref="T:System.Type"/> that exposes access to
            a <see cref="T:System.Resources.ResourceManager"/> that
            contains the localized names of the enumeration members.
            </param>
        </member>
        <member name="P:Kamilla.LocalizedNameContainerAttribute.ResourceManager">
            <summary>
            Gets the <see cref="T:System.Type"/> that exposes access to
            a <see cref="T:System.Resources.ResourceManager"/> that
            contains the localized names of the enumeration members.
            </summary>
        </member>
        <member name="T:Kamilla.WPF.MessageWindow">
            <summary>
            MessageWindow
            </summary>
        </member>
        <member name="M:Kamilla.WPF.MessageWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Kamilla.UICulture">
            <summary>
            Controls user interface culture information.
            </summary>
        </member>
        <member name="M:Kamilla.UICulture.Initialize">
            <summary>
            Initializes the user interface culture.
            </summary>
        </member>
        <member name="P:Kamilla.UICulture.Culture">
            <summary>
            Gets or sets current user interface culture.
            </summary>
        </member>
        <member name="E:Kamilla.UICulture.UICultureChanged">
            <summary>
            Occurs when <see cref="P:Kamilla.UICulture.Culture"/> property changes.
            </summary>
        </member>
        <member name="T:Kamilla.Network.Viewing.Plugins.INetworkLogViewerPlugin">
            <summary>
            Provides an interface for plugins to a
            <see cref="T:Kamilla.Network.Viewing.NetworkLogViewerBase"/>.
            </summary>
        </member>
        <member name="M:Kamilla.Network.Viewing.Plugins.INetworkLogViewerPlugin.Initialize(Kamilla.Network.Viewing.NetworkLogViewerBase)">
            <summary>
            Initializes the current instance of
            <see cref="T:Kamilla.Network.Viewing.Plugins.INetworkLogViewerPlugin"/>.
            </summary>
            <param name="viewer">
            The <see cref="T:Kamilla.Network.Viewing.NetworkLogViewerBase"/>
            that the current plugin is attached to.
            </param>
        </member>
        <member name="T:Kamilla.Network.Logging.NetworkLogFlags">
            <summary>
            Defines flags of a packet dump reading class.
            </summary>
        </member>
        <member name="F:Kamilla.Network.Logging.NetworkLogFlags.None">
            <summary>
            Indicates no flags. 
            </summary>
        </member>
        <member name="F:Kamilla.Network.Logging.NetworkLogFlags.ReadOnly">
            <summary>
            Indicates that the underlying dump reading class only supports reading data.
            </summary>
        </member>
        <member name="F:Kamilla.Network.Logging.NetworkLogFlags.Experimental">
            <summary>
            Indicates that the underlying dump reading class implementation is experimental.
            </summary>
        </member>
        <member name="T:Kamilla.IO.StreamHandler">
            <summary>
            A class to manipulate data inside a stream.
            </summary>
        </member>
        <member name="F:Kamilla.IO.StreamHandler.m_unalignedBits">
            <summary>
            When reading, this value indicates how many bits of m_buffer[0] is used.
            When writing, this value indicates how many bits are free in m_buffer[0].
            </summary>
        </member>
        <member name="F:Kamilla.IO.StreamHandler.m_stream">
            <summary>
            Holds the underlying stream.
            </summary>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:Kamilla.IO.StreamHandler"/> class
            based on the supplied stream and a specific character encoding.
            </summary>
            <param name="output">The output stream.</param>
            <param name="encoding">The character encoding.</param>
            <exception cref="T:System.ArgumentException">
            The stream does not support writing, or the stream is already closed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            output or encoding is null.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Kamilla.IO.StreamHandler"/> class
            based on the supplied stream and a specific character encoding.
            </summary>
            <param name="output">The output stream.</param>
            <param name="encoding">The character encoding.</param>
            <param name="closeStream">
            true, if the output stream should be closed when
            the <see cref="T:Kamilla.IO.StreamHandler"/> is disposed; otherwise, false.
            </param>
            <exception cref="T:System.ArgumentException">
            The stream does not support writing, or the stream is already closed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            output or encoding is null.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Kamilla.IO.StreamHandler"/> class
            based on the supplied stream and using UTF-8 as the encoding for strings.
            </summary>
            <param name="output">The output stream.</param>
            <exception cref="T:System.ArgumentException">
            The stream does not support writing, or the stream is already closed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            output is null.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Kamilla.IO.StreamHandler"/> class
            based on the supplied stream and using UTF-8 as the encoding for strings.
            </summary>
            <param name="output">The output stream.</param>
            <param name="closeStream">
            true, if the output stream should be closed when
            the <see cref="T:Kamilla.IO.StreamHandler"/> is disposed; otherwise, false.
            </param>
            <exception cref="T:System.ArgumentException">
            The stream does not support writing, or the stream is already closed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            output is null.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kamilla.IO.StreamHandler"/> class
            using a new resizeable <see cref="T:System.IO.MemoryStream"/> and using UTF-8 as the encoding for strings.
            </summary>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kamilla.IO.StreamHandler"/> class
            using a new <see cref="T:System.IO.FileStream"/> in reading or writing mode
            and using UTF-8 as the encoding for strings.
            </summary>
            <param name="path">
            Name of the file to open.
            </param>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.#ctor(System.String,System.IO.FileMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Kamilla.IO.StreamHandler"/> class
            using a new <see cref="T:System.IO.FileStream"/> in the specified mode
            and using UTF-8 as the encoding for strings.
            </summary>
            <param name="path">
            A relative or absolute path for the file that the current
            <see cref="T:Kamilla.IO.StreamHandler"/> object will encapsulate.
            </param>
            <param name="mode">
            A <see cref="T:System.IO.FileMode"/> constant that determines how to open or create the file.
            </param>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.#ctor(System.String,System.IO.FileMode,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:Kamilla.IO.StreamHandler"/> class
            using a new <see cref="T:System.IO.FileStream"/> in the specified mode
            and using the specified encoding for strings.
            </summary>
            <param name="path">
            A relative or absolute path for the file that the current
            <see cref="T:Kamilla.IO.StreamHandler"/> object will encapsulate.
            </param>
            <param name="mode">
            A <see cref="T:System.IO.FileMode"/> constant that determines how to open or create the file.
            </param>
            <param name="encoding">
            The character encoding.
            </param>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Kamilla.IO.StreamHandler"/> class
            based on the supplied byte array.
            </summary>
            <param name="buffer">The byte array containing data to be read or to be written into.</param>
            <exception cref="T:System.ArgumentNullException">
            buffer is null.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.Close">
            <summary>
            Closes the current <see cref="T:Kamilla.IO.StreamHandler"/> and the underlying stream.
            </summary>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Kamilla.IO.StreamHandler"/>
            and optionally releases the managed resources.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources;
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.Dispose">
            <summary>
            Releases all resources used by the current instance of the <see cref="T:Kamilla.IO.StreamHandler"/> class.
            </summary>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.Flush">
            <summary>
            Clears all buffers for the current writer and causes any buffered
            data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.CanRead(System.Int64)">
            <summary>
            Gets the value indicating whether you can read the provided number of bytes.
            </summary>
            <param name="bytes">Number of bytes to read.</param>
            <returns>true if the provided number of bytes can be read; otherwise, false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The stream does not support seeking.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ArgumentException">
            bytes is negative.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.Skip(System.Int64)">
            <summary>
            Skips a number of bytes from the current stream.
            </summary>
            <param name="bytes">The number of bytes to skip.</param>
            <returns>true if the provided number of bytes can be read; otherwise, false.</returns>
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The stream does not support seeking.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ArgumentException">
            bytes is negative.
            </exception>
            <exception cref="T:System.IO.EndOfStreamException">
            End of stream is reached.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.FlushUnalignedBits">
            <summary>
            Flushes the unaligned bit buffer of the current stream.
            </summary>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.UnalignedWriteBit(System.Boolean)">
            <summary>
            Writes a single bit of data to the current stream.
            </summary>
            <param name="value">
            The bit value to write.
            </param>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.UnalignedWriteInt(System.UInt64,System.Int32)">
            <summary>
            Writes an integer value of the specified number of bits of 64 maximum to the current stream.
            </summary>
            <param name="value">
            The integer value to write.
            </param>
            <param name="bits">
            Number of bits to write.
            </param>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.UnalignedWriteInt(System.UInt32,System.Int32)">
            <summary>
            Writes an integer value of the specified number of bits of 32 maximum to the current stream.
            </summary>
            <param name="value">
            The integer value to write.
            </param>
            <param name="bits">
            Number of bits to write.
            </param>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.UnalignedWriteInt(System.UInt16,System.Int32)">
            <summary>
            Writes an integer value of the specified number of bits of 16 maximum to the current stream.
            </summary>
            <param name="value">
            The integer value to write.
            </param>
            <param name="bits">
            Number of bits to write.
            </param>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.UnalignedWriteInt(System.Byte,System.Int32)">
            <summary>
            Writes an integer value of the specified number of bits of 8 maximum to the current stream.
            </summary>
            <param name="value">
            The integer value to write.
            </param>
            <param name="bits">
            Number of bits to write.
            </param>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.WriteBoolean(System.Boolean)">
            <summary>
            Writes a one-byte Boolean value to the current stream, with 0 representing
            false and 1 representing true.
            </summary>
            <param name="value">
            The Boolean value to write (0 or 1).
            </param>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.WriteByte(System.Byte)">
            <summary>
            Writes an unsigned byte to the current stream and advances the stream position
            by one byte.
            </summary>
            <param name="value">
            The unsigned byte to write.
            </param>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.WriteBytes(System.Byte[])">
            <summary>
            Writes a byte array to the underlying stream.
            </summary>
            <param name="buffer">
            A byte array containing the data to write.
            </param>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            buffer is null.
            </exception>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.WriteChar(System.Char)">
            <summary>
            Writes a Unicode character to the current stream and advances the current
            position of the stream in accordance with the Encoding used and the specific
            characters being written to the stream.
            </summary>
            <param name="ch">
            The non-surrogate, Unicode character to write.
            </param>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.ArgumentException">
            ch is a single surrogate character.
            </exception>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.WriteChars(System.Char[])">
            <summary>
            Writes a character array to the current stream and advances the current position
            of the stream in accordance with the Encoding used and the specific characters
            being written to the stream.
            </summary>
            <param name="chars">
            A character array containing the data to write.
            </param>
            <exception cref="T:System.ArgumentNullException">
            chars is null.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.WriteDecimal(System.Decimal)">
            <summary>
            Writes a decimal value to the current stream and advances the stream position
            by sixteen bytes.
            </summary>
            <param name="value">
            The decimal value to write.
            </param>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.WriteDouble(System.Double)">
            <summary>
            Writes an eight-byte floating-point value to the current stream and advances
            the stream position by eight bytes.
            </summary>
            <param name="value">
            The eight-byte floating-point value to write.
            </param>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.WriteSingle(System.Single)">
            <summary>
            Writes a four-byte floating-point value to the current stream and advances
            the stream position by four bytes.
            </summary>
            <param name="value">
            The four-byte floating-point value to write.
            </param>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.WriteInt32(System.Int32)">
            <summary>
            Writes a four-byte signed integer to the current stream and advances the
            stream position by four bytes.
            </summary>
            <param name="value">
            The four-byte signed integer to write.
            </param>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.WriteInt64(System.Int64)">
            <summary>
            Writes an eight-byte signed integer to the current stream and advances the
            stream position by eight bytes.
            </summary>
            <param name="value">
            The eight-byte signed integer to write.
            </param>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.WriteSByte(System.SByte)">
            <summary>
            Writes a signed byte to the current stream and advances the stream position
            by one byte.
            </summary>
            <param name="value">
            The signed byte to write.
            </param>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.WriteInt16(System.Int16)">
            <summary>
            Writes a two-byte signed integer to the current stream and advances the stream
            position by two bytes.
            </summary>
            <param name="value">
            The two-byte signed integer to write.
            </param>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.WriteCString(System.String)">
            <summary>
            Writes a null-terminated string to the current stream in the current encoding of
            the <see cref="T:Kamilla.IO.StreamHandler"/>, and advances the current position of the stream
            by the length of the string plus one.
            </summary>
            <param name="value">
            The string to write.
            </param>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            value is null.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.ArgumentException">
            value contains a null character before a not-null character.
            </exception>
            <returns>
            The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.
            </returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.WriteUInt32(System.UInt32)">
            <summary>
            Writes a four-byte unsigned integer to the current stream and advances the
            stream position by four bytes.
            </summary>
            <param name="value">
            The four-byte unsigned integer to write.
            </param>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.WriteUInt64(System.UInt64)">
            <summary>
            Writes an eight-byte unsigned integer to the current stream and advances
            the stream position by eight bytes.
            </summary>
            <param name="value">
            The eight-byte unsigned integer to write.
            </param>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.WriteUInt16(System.UInt16)">
            <summary>
            Writes a two-byte unsigned integer to the current stream and advances the
            stream position by two bytes.
            </summary>
            <param name="value">
            The two-byte unsigned integer to write.
            </param>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.WriteVector2(Kamilla.Vector2@)">
            <summary>
            Writes a two-component vector to the current stream
            and advances the stream position by eight bytes.
            </summary>
            <param name="vector">
            The <see cref="T:Kamilla.Vector2"/> to write.
            </param>
            <returns>
            The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.
            </returns>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.WriteVector3(Kamilla.Vector3@)">
            <summary>
            Writes a three-component vector to the current stream
            and advances the stream position by twelve bytes.
            </summary>
            <param name="vector">
            The <see cref="T:Kamilla.Vector3"/> to write.
            </param>
            <returns>
            The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.
            </returns>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.WriteBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a region of a byte array to the current stream.
            </summary>
            <param name="buffer">
            A byte array containing the data to write.
            </param>
            <param name="index">
            The starting point in buffer at which to begin writing.
            </param>
            <param name="count">
            The number of bytes to write.
            </param>
            <exception cref="T:System.ArgumentException">
            The buffer length minus index is less than count.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            buffer is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            index or count is negative.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.WriteChars(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes a section of a character array to the current stream, and advances
            the current position of the stream in accordance with the Encoding used and
            perhaps the specific characters being written to the stream.
            </summary>
            <param name="chars">
            A character array containing the data to write.
            </param>
            <param name="index">
            The starting point in buffer from which to begin writing.
            </param>
            <param name="count">
            The number of characters to write.
            </param>
            <exception cref="T:System.ArgumentException">
            The buffer length minus index is less than count.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            chars is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            index or count is negative.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.WriteStruct``1(``0)">
            <summary>
            Writes a byte representation of a structure to the current stream.
            </summary>
            <typeparam name="T">
            Type of a structure.
            </typeparam>
            <param name="structure">
            A structure to write into the current stream.
            </param>
            <returns>The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.PeekChar">
            <summary>
            Returns the next available character and does not advance the byte or character
            position.
            </summary>
            <returns>
            The next available character, or -1 if no more characters are available or
            the stream does not support seeking.
            </returns>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.Read">
            <summary>
            Reads characters from the underlying stream and advances the current position
            of the stream in accordance with the Encoding used and the specific character
            being read from the stream.
            </summary>
            <returns>
            The next character from the input stream, or -1 if no characters are currently
            available.
            </returns>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads the specified number of bytes from the stream, starting from a specified
            point in the byte array.
            </summary>
            <param name="buffer">
            The buffer to read data into.
            </param>
            <param name="offset">
            The starting point in the buffer at which to begin reading into the buffer.
            </param>
            <param name="count">
            The number of bytes to read.
            </param>
            <returns>
            The number of bytes read into buffer. This might be less than the number
            of bytes requested if that many bytes are not available, or it might be zero
            if the end of the stream is reached.
            </returns>
            <exception cref="T:System.ArgumentException">
            The sum of offset and count is larger than the buffer length.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            buffer is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            offset or count is negative.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The stream does not support reading.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
             Methods were called after the stream was closed.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.Read(System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads the specified number of characters from the stream, starting from a
            specified point in the character array.
            </summary>
            <param name="buffer">
            The buffer to read data into.
            </param>
            <param name="index">
            The starting point in the buffer at which to begin reading into the buffer.
            </param>
            <param name="count">
            The number of characters to read.
            </param>
            <returns>
            The total number of characters read into the buffer. This might be less than
            the number of characters requested if that many characters are not currently
            available, or it might be zero if the end of the stream is reached.
            </returns>
            <exception cref="T:System.ArgumentException">
            The buffer length minus index is less than count. -or-The number of decoded
            characters to read is greater than count. This can happen if a Unicode decoder
            returns fallback characters or a surrogate pair.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            buffer is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            index or count is negative.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.UnalignedReadBit">
            <summary>
            Reads a single unaligned bit from the underlying stream.
            </summary>
            <returns>
            Value of the read bit.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.UnalignedReadBigInt(System.Int32)">
            <summary>
            Reads an unaligned unsigned integer of maximum 64 bits at max from the underlying stream.
            </summary>
            <param name="bits">
            Number of bits to read.
            </param>
            <returns>
            The read integer.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.UnalignedReadInt(System.Int32)">
            <summary>
            Reads an unaligned unsigned integer of 32 bits at max from the underlying stream.
            </summary>
            <param name="bits">
            Number of bits to read.
            </param>
            <returns>
            The read integer.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.UnalignedReadSmallInt(System.Int32)">
            <summary>
            Reads an unaligned unsigned integer of 16 bits at max from the underlying stream.
            </summary>
            <param name="bits">
            Number of bits to read.
            </param>
            <returns>
            The read integer.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.UnalignedReadTinyInt(System.Int32)">
            <summary>
            Reads an unsigned integer of 8 bits at max from the underlying stream.
            </summary>
            <param name="bits">
            Number of bits to read.
            </param>
            <returns>
            The read integer.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadBoolean">
            <summary>
            Reads a Boolean value from the current stream and advances the current position
            of the stream by one byte.
            </summary>
            <returns>
            true if the byte is nonzero; otherwise, false.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadByte">
            <summary>
            Reads the next byte from the current stream and advances the current position
            of the stream by one byte.
            </summary>
            <returns>
            The next byte read from the current stream.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadByte(System.Byte@)">
            <summary>
            Reads the next byte from the current stream and advances the current position
            of the stream by one byte.
            </summary>
            <param name="value">
            The next byte read from the current stream.
            </param>
            <returns>
            The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadBytes(System.Int32)">
            <summary>
            Reads the specified number of bytes from the current stream into a byte array
            and advances the current position by that number of bytes.
            </summary>
            <param name="count">
            The number of bytes to read.
            </param>
            <returns>
            A byte array containing data read from the underlying stream. This might
            be less than the number of bytes requested if the end of the stream is reached.
            </returns>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            count is negative.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadChar">
            <summary>
            Reads the next character from the current stream and advances the current
            position of the stream in accordance with the Encoding used and the specific
            character being read from the stream.
            </summary>
            <returns>
            A character read from the current stream.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ArgumentException">
            A surrogate character was read.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadChar(System.Char@)">
            <summary>
            Reads the next character from the current stream and advances the current
            position of the stream in accordance with the Encoding used and the specific
            character being read from the stream.
            </summary>
            <param name="value">
            A character read from the current stream.
            </param>
            <returns>
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ArgumentException">
            A surrogate character was read.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadChars(System.Int32)">
            <summary>
            Reads the specified number of characters from the current stream, returns
            the data in a character array, and advances the current position in accordance
            with the Encoding used and the specific character being read from the stream.
            </summary>
            <param name="count">
            The number of characters to read.
            </param>
            <returns>
            A character array containing data read from the underlying stream. This might
            be less than the number of characters requested if the end of the stream
            is reached.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            count is negative.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadDecimal">
            <summary>
            Reads a decimal value from the current stream and advances the current position
            of the stream by sixteen bytes.
            </summary>
            <returns>
            A decimal value read from the current stream.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadDouble">
            <summary>
            Reads an 8-byte floating point value from the current stream and advances
            the current position of the stream by eight bytes.
            </summary>
            <returns>
            An 8-byte floating point value read from the current stream.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadDouble(System.Double@)">
            <summary>
            Reads an 8-byte floating point value from the current stream and advances
            the current position of the stream by eight bytes.
            </summary>
            <param name="value">
            An 8-byte floating point value read from the current stream.
            </param>
            <returns>
            The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadInt16">
            <summary>
            Reads a 2-byte signed integer from the current stream and advances the current
            position of the stream by two bytes.
            </summary>
            <returns>
            A 2-byte signed integer read from the current stream.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadInt16(System.Int16@)">
            <summary>
            Reads a 2-byte signed integer from the current stream and advances the current
            position of the stream by two bytes.
            </summary>
            <param name="value">
            A 2-byte signed integer read from the current stream.
            </param>
            <returns>
            The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadInt32">
            <summary>
            Reads a 4-byte signed integer from the current stream and advances the current
            position of the stream by four bytes.
            </summary>
            <returns>
            A 4-byte signed integer read from the current stream.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadInt32(System.Int32@)">
            <summary>
            Reads a 4-byte signed integer from the current stream and advances the current
            position of the stream by four bytes.
            </summary>
            <param name="value">
            A 4-byte signed integer read from the current stream.
            </param>
            <returns>
            The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadInt64">
            <summary>
            Reads an 8-byte signed integer from the current stream and advances the current
            position of the stream by eight bytes.
            </summary>
            <returns>
            An 8-byte signed integer read from the current stream.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadInt64(System.Int64@)">
            <summary>
            Reads an 8-byte signed integer from the current stream and advances the current
            position of the stream by eight bytes.
            </summary>
            <param name="value">
            An 8-byte signed integer read from the current stream.
            </param>
            <returns>
            The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadSByte">
            <summary>
            Reads a signed byte from this stream and advances the current position of
            the stream by one byte.
            </summary>
            <returns>
            A signed byte read from the current stream.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadSByte(System.SByte@)">
            <summary>
            Reads a signed byte from this stream and advances the current position of
            the stream by one byte.
            </summary>
            <param name="value">
            A signed byte read from the current stream.
            </param>
            <returns>
            The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadSingle">
            <summary>
            Reads a 4-byte floating point value from the current stream and advances
            the current position of the stream by four bytes.
            </summary>
            <returns>
            A 4-byte floating point value read from the current stream.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadSingle(System.Single@)">
            <summary>
            Reads a 4-byte floating point value from the current stream and advances
            the current position of the stream by four bytes.
            </summary>
            <param name="value">
            A 4-byte floating point value read from the current stream.
            </param>
            <returns>
            The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadString(System.Int32)">
            <summary>
            Reads a string from the current stream using the current <see cref="T:System.Text.Encoding"/>,
            and advances the stream position by the number of bytes.
            </summary>
            <param name="numBytes">
            Number of bytes that represent the stream.
            </param>
            <returns>
            The read string.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            numBytes is negative.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadCString">
            <summary>
            Reads a null-terminated string from the current stream.
            </summary>
            <returns>
            The read string.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadUInt16">
            <summary>
            Reads a 2-byte unsigned integer from the current stream using little-endian
            encoding and advances the position of the stream by two bytes.
            </summary>
            <returns>
            A 2-byte unsigned integer read from this stream.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadUInt32">
            <summary>
            Reads a 4-byte unsigned integer from the current stream and advances the
            position of the stream by four bytes.
            </summary>
            <returns>
            A 4-byte unsigned integer read from this stream.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadUInt32(System.UInt32@)">
            <summary>
            Reads a 4-byte unsigned integer from the current stream and advances the
            position of the stream by four bytes.
            </summary>
            <param name="value">
            A 4-byte unsigned integer read from this stream.
            </param>
            <returns>
            The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadUInt64">
            <summary>
            Reads an 8-byte unsigned integer from the current stream and advances the
            position of the stream by eight bytes.
            </summary>
            <returns>
            An 8-byte unsigned integer read from this stream.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadUInt64(System.UInt64@)">
            <summary>
            Reads an 8-byte unsigned integer from the current stream and advances the
            position of the stream by eight bytes.
            </summary>
            <param name="value">
            An 8-byte unsigned integer read from this stream.
            </param>
            <returns>
            The current instance of <see cref="T:Kamilla.IO.StreamHandler"/>.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadVector3">
            <summary>
            Reads a three-component vector from the current stream
            and advences the position of the stream by twelve bytes.
            </summary>
            <returns>
            A <see cref="T:Kamilla.Vector3"/> read from the stream.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadVector2">
            <summary>
            Reads a two-component vector from the current stream
            and advences the position of the stream by eight bytes.
            </summary>
            <returns>
            A <see cref="T:Kamilla.Vector2"/> read from the stream.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ToByteArray">
            <summary>
            Reads all bytes from the current stream, not advancing the current position.
            </summary>
            <returns>
            The byte array that contains all bytes from the current stream.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The end of the stream is reached.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.ReadStruct``1">
            <summary>
            Reads a structure from the current stream, advancing
            the current position by the number of bytes in the structure.
            </summary>
            <typeparam name="T">
            Type of the structure.
            </typeparam>
            <returns>
            A structure read from the stream.
            </returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.DoAt``2(System.Int64,System.Func{``0,``1},``0)">
            <summary>
            Runs the given function temporary setting the current stream's position to the specified value.
            </summary>
            <typeparam name="TArg">Type of the function argument.</typeparam>
            <typeparam name="TResult">The return type of the function.</typeparam>
            <param name="position">The position to run the function at.</param>
            <param name="func">The function to run at the given position.</param>
            <param name="arg">The argument passed to the function.</param>
            <returns>The result of the function.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.DoAt``1(System.Int64,System.Func{``0})">
            <summary>
            Runs the given function temporary setting the current stream's position to the specified value.
            </summary>
            <typeparam name="TResult">The return type of the function.</typeparam>
            <param name="position">The position to run the function at.</param>
            <param name="func">The function to run at the given position.</param>
            <returns>The result of the function.</returns>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.DoAt``1(System.Int64,System.Action{``0},``0)">
            <summary>
            Runs the given function temporary setting the current stream's position to the specified value.
            </summary>
            <typeparam name="TArg">Type of the function argument.</typeparam>
            <param name="position">The position to run the function at.</param>
            <param name="func">The function to run at the given position.</param>
            <param name="arg">The argument passed to the function.</param>
        </member>
        <member name="M:Kamilla.IO.StreamHandler.DoAt(System.Int64,System.Action)">
            <summary>
            Runs the given function temporary setting the current stream's position to the specified value.
            </summary>
            <param name="position">The position to run the function at.</param>
            <param name="func">The function to run at the given position.</param>
        </member>
        <member name="P:Kamilla.IO.StreamHandler.BaseStream">
            <summary>
            Gets the underlying stream of the <see cref="T:Kamilla.IO.StreamHandler"/>.
            </summary>
        </member>
        <member name="P:Kamilla.IO.StreamHandler.RemainingLength">
            <summary>
            Gets the number of bytes from the current position of the stream to the end of the stream.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The stream does not support seeking.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="P:Kamilla.IO.StreamHandler.Length">
            <summary>
            Gets the length of the stream in bytes.
            </summary>
            <returns>
            The length of the stream in bytes.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
        </member>
        <member name="P:Kamilla.IO.StreamHandler.Position">
            <summary>
            Gets or sets the current position within the stream.
            </summary>
            <returns>
            The current position within the stream.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The position is set to a negative value or a value greater than <see cref="F:System.Int32.MaxValue" />.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The stream is closed.
            </exception>
        </member>
        <member name="P:Kamilla.IO.StreamHandler.IsRead">
            <summary>
            Gets the value indicating whether the current stream was fully read and no bytes can be read currently.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The stream does not support seeking.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="T:Kamilla.Network.Logging.NetworkLogMode">
            <summary>
            Specifies mode of a <see cref="T:Kamilla.Network.Logging.NetworkLog"/>.
            </summary>
        </member>
        <member name="F:Kamilla.Network.Logging.NetworkLogMode.Abstract">
            <summary>
            Specifies abstract mode of a <see cref="T:Kamilla.Network.Logging.NetworkLog"/>.
            </summary>
            <remarks>
            In abstract mode a <see cref="T:Kamilla.Network.Logging.NetworkLog"/> stores
            all passed packets, and allows one-pass data saving into the file.
            </remarks>
        </member>
        <member name="F:Kamilla.Network.Logging.NetworkLogMode.Reading">
            <summary>
            Specifies reading mode of a <see cref="T:Kamilla.Network.Logging.NetworkLog"/>.
            </summary>
            <remarks>
            In reading mode a <see cref="T:Kamilla.Network.Logging.NetworkLog"/> loads
            meta data and packets from a file, and doesn't allow further data modification.
            </remarks>
        </member>
        <member name="F:Kamilla.Network.Logging.NetworkLogMode.Writing">
            <summary>
            Specifies writing mode of a <see cref="T:Kamilla.Network.Logging.NetworkLog"/>.
            </summary>
            <remarks>
            In writing mode a <see cref="T:Kamilla.Network.Logging.NetworkLog"/> saves
            all passed packets into a file, and doesn't allow accessing stored data.
            </remarks>
        </member>
        <member name="T:Kamilla.WPF.WpfExtensions">
            <summary>
            Contains extension methods to the classes of the Windows Presentation Framework (WPF).
            </summary>
        </member>
        <member name="M:Kamilla.WPF.WpfExtensions.ThreadSafe``1(``0,System.Action{``0})">
            <summary>
            Thread-safely executes a function on a
            <see cref="T:System.Windows.Threading.DispatcherObject"/>.
            
            The calling thread does not wait until the thread that is associated with
            <see cref="T:System.Windows.Threading.DispatcherObject"/> finished execution.
            </summary>
            <typeparam name="T">
            Type of the <see cref="T:System.Windows.Threading.DispatcherObject"/> implementation.
            </typeparam>
            <param name="dispatcherObject">
            The <see cref="T:System.Windows.Threading.DispatcherObject"/> on which the function is executed.
            </param>
            <param name="action">
            The function to execute.
            </param>
        </member>
        <member name="M:Kamilla.WPF.WpfExtensions.ThreadSafeBegin``1(``0,System.Action{``0})">
            <summary>
            Thread-safely executes a function on a
            <see cref="T:System.Windows.Threading.DispatcherObject"/>.
            
            The calling thread does not wait until the thread that is associated with
            <see cref="T:System.Windows.Threading.DispatcherObject"/> finished execution.
            </summary>
            <typeparam name="T">
            Type of the <see cref="T:System.Windows.Threading.DispatcherObject"/> implementation.
            </typeparam>
            <param name="dispatcherObject">
            The <see cref="T:System.Windows.Threading.DispatcherObject"/> on which the function is executed.
            </param>
            <param name="action">
            The function to execute.
            </param>
        </member>
        <member name="M:Kamilla.WPF.WpfExtensions.ThreadSafe``2(``0,System.Func{``0,``1})">
            <summary>
            Thread-safely executes a function on a
            <see cref="T:System.Windows.Threading.DispatcherObject"/>
            and returns the result of the operation.
            </summary>
            <typeparam name="TDispatcherObject">
            Type of the <see cref="T:System.Windows.Threading.DispatcherObject"/> implementation.
            </typeparam>
            <typeparam name="TResult">
            Type of the result of the function.
            </typeparam>
            <param name="dispatcherObject">
            The <see cref="T:System.Windows.Threading.DispatcherObject"/> on which
            the function is executed.
            </param>
            <param name="func">
            The function to execute.
            </param>
            <returns>
            Result of the function.
            </returns>
        </member>
        <member name="T:Kamilla.Network.Protocols.ProtocolWrapper">
            <summary>
            Contains identification data of a
            <see cref="T:Kamilla.Network.Protocols.Protocol"/>.
            </summary>
        </member>
        <member name="F:Kamilla.Network.Protocols.ProtocolWrapper.m_parsers">
            <summary>
            Represents opcode/parserType storage.
            </summary>
        </member>
        <member name="F:Kamilla.Network.Protocols.ProtocolWrapper.Index">
            <summary>
            Gets the zero-based index of the underlying
            <see cref="T:Kamilla.Network.Protocols.Protocol"/>.
            </summary>
        </member>
        <member name="F:Kamilla.Network.Protocols.ProtocolWrapper.Type">
            <summary>
            Gets the <see cref="T:System.Type"/> of the
            underlying <see cref="T:Kamilla.Network.Protocols.Protocol"/>.
            </summary>
        </member>
        <member name="F:Kamilla.Network.Protocols.ProtocolWrapper.TypeName">
            <summary>
            Gets the name of the <see cref="T:System.Type"/>
            of the underlying <see cref="T:Kamilla.Network.Protocols.Protocol"/>.
            </summary>
        </member>
        <member name="F:Kamilla.Network.Protocols.ProtocolWrapper.Name">
            <summary>
            Gets the localized name of the underlying
            <see cref="T:Kamilla.Network.Protocols.Protocol"/>.
            </summary>
        </member>
        <member name="M:Kamilla.Network.Protocols.ProtocolWrapper.Activate">
            <summary>
            Creates a new instance of the underlying <see cref="T:Kamilla.Network.Protocols.Protocol"/>.
            </summary>
            <returns>
            A new instance of the underlying <see cref="T:Kamilla.Network.Protocols.Protocol"/>.
            </returns>
        </member>
        <member name="P:Kamilla.Network.Protocols.ProtocolWrapper.Parsers">
            <summary>
            Gets the opcode/parserType storage.
            </summary>
        </member>
        <member name="T:Kamilla.Network.Parsing.PacketParserAttribute">
            <summary>
            Indicates <see cref="T:Kamilla.Network.Protocols.Protocol"/> and opcode
            that the current <see cref="T:Kamilla.Network.Parsing.PacketParser"/> can handle.
            </summary>
        </member>
        <member name="M:Kamilla.Network.Parsing.PacketParserAttribute.#ctor(System.Type,System.UInt32)">
            <summary>
            Initializes a new instance of <see cref="T:Kamilla.Network.Parsing.PacketParserAttribute"/>
            for the specified <see cref="T:System.Type"/> of <see cref="T:Kamilla.Network.Protocols.Protocol"/>
            and opcode.
            </summary>
            <param name="protocol">
            <see cref="T:System.Type"/> of <see cref="T:Kamilla.Network.Protocols.Protocol"/>
            that the underlying <see cref="T:Kamilla.Network.Parsing.PacketParser"/> can handle.
            </param>
            <param name="opcode">
            Opcode that the current <see cref="T:Kamilla.Network.Parsing.PacketParser"/> can handle.
            </param>
            <exception cref="T:System.ArgumentNullException">
            protocol is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            protocol is not subclass of <see cref="T:Kamilla.Network.Protocols.Protocol"/>.
            </exception>
        </member>
        <member name="P:Kamilla.Network.Parsing.PacketParserAttribute.ProtocolType">
            <summary>
            Gets the type of <see cref="T:Kamilla.Network.Protocols.Protocol"/>
            that the current <see cref="T:Kamilla.Network.Parsing.PacketParser"/> can handle.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Parsing.PacketParserAttribute.Opcode">
            <summary>
            Gets the opcode that the current
            <see cref="T:Kamilla.Network.Parsing.PacketParser"/> can handle.
            </summary>
        </member>
        <member name="T:Kamilla.Network.Viewing.ViewerItem">
            <summary>
            Represents a union of objects used to store, display and interpret data
            of a <see cref="T:Kamilla.Network.Packet"/> in a
            <see cref="T:Kamilla.Network.Viewing.NetworkLogViewerBase"/>.
            </summary>
        </member>
        <member name="M:Kamilla.Network.Viewing.ViewerItem.#ctor(Kamilla.Network.Viewing.NetworkLogViewerBase,Kamilla.Network.Logging.NetworkLog,Kamilla.Network.Packet,System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Kamilla.Network.Viewing.ViewerItem"/> that i
            </summary>
            <param name="viewer">
            The <see cref="T:Kamilla.Network.Viewing.NetworkLogViewerBase"/> to which
            the current instance of <see cref="T:Kamilla.Network.Viewing.ViewerItem"/> belongs to.
            </param>
            <param name="log">
            Gets the <see cref="T:Kamilla.Network.Logging.NetworkLog"/> that
            stores the underlying <see cref="T:Kamilla.Network.Packet"/>.
            </param>
            <param name="index">
            Gets the counter of the current instance
            of <see cref="T:Kamilla.Network.Viewing.ViewerItem"/>.
            </param>
            <param name="packet">
            Gets the <see cref="T:Kamilla.Network.Packet"/> for which the current
            instance of <see cref="T:Kamilla.Network.Viewing.ViewerItem"/> was created.
            </param>
            <exception cref="T:System.ArgumentNullException">
            viewer is null.
            -or-
            log is null.
            -or-
            packet is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            index is negative.
            </exception>
        </member>
        <member name="P:Kamilla.Network.Viewing.ViewerItem.Viewer">
            <summary>
            Gets the <see cref="T:Kamilla.Network.Viewing.NetworkLogViewerBase"/> to which
            the current instance of <see cref="T:Kamilla.Network.Viewing.ViewerItem"/> belongs to.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Viewing.ViewerItem.Packet">
            <summary>
            Gets the <see cref="T:Kamilla.Network.Packet"/> for which the current
            instance of <see cref="T:Kamilla.Network.Viewing.ViewerItem"/> was created.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Viewing.ViewerItem.Parser">
            <summary>
            Gets or sets an instance of <see cref="T:Kamilla.Network.Parsing.PacketParser"/> class that is
            assigned to interpret data of the current <see cref="T:Kamilla.Network.Viewing.ViewerItem"/>.
            
            This value can be null.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Viewing.ViewerItem.Log">
            <summary>
            Gets the <see cref="T:Kamilla.Network.Logging.NetworkLog"/> that
            stores the underlying <see cref="T:Kamilla.Network.Packet"/>.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Viewing.ViewerItem.Data">
            <summary>
            Gets or sets the data associated with the current instance
            of <see cref="T:Kamilla.Network.Viewing.ViewerItem"/>.
            
            This value can be null.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Viewing.ViewerItem.Index">
            <summary>
            Gets the counter of the current instance
            of <see cref="T:Kamilla.Network.Viewing.ViewerItem"/>.
            </summary>
        </member>
        <member name="T:Kamilla.Network.Parsing.UndefinedPacketParser">
            <summary>
            Represents an unkown or undefined packet parser.  This parser does nothing.
            </summary>
        </member>
        <member name="T:Kamilla.Network.Viewing.ProtocolChangedEventHandler">
            <summary>
            Handles <see cref="E:Kamilla.Network.Viewing.NetworkLogViewerBase.ProtocolChanged"/> event.
            </summary>
            <param name="sender">
            The current <see cref="T:Kamilla.Network.Viewing.NetworkLogViewerBase"/>.
            </param>
            <param name="e">
            An instance of <see cref="T:Kamilla.Network.Viewing.ProtocolChangedEventArgs"/> class
            that contains the event data.
            </param>
        </member>
        <member name="T:Kamilla.Network.Viewing.ProtocolChangedEventArgs">
            <summary>
            Contains data related to
            <see cref="E:Kamilla.Network.Viewing.NetworkLogViewerBase.ProtocolChanged"/> event.
            </summary>
        </member>
        <member name="M:Kamilla.Network.Viewing.ProtocolChangedEventArgs.#ctor(Kamilla.Network.Protocols.Protocol,Kamilla.Network.Protocols.Protocol)">
            <summary>
            Initializes a new instance of
            <see cref="T:Kamilla.Network.Viewing.ProtocolChangedEventArgs"/> with the specified
            new and old instances of <see cref="T:Kamilla.Network.Protocols.Protocol"/>.
            </summary>
            <param name="oldProtocol">
            The old instance of <see cref="T:Kamilla.Network.Protocols.Protocol"/>.
            </param>
            <param name="newProtocol">
            The new instance of <see cref="T:Kamilla.Network.Protocols.Protocol"/>.
            </param>
        </member>
        <member name="P:Kamilla.Network.Viewing.ProtocolChangedEventArgs.OldProtocol">
            <summary>
            Gets the old instance of <see cref="T:Kamilla.Network.Protocols.Protocol"/>.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Viewing.ProtocolChangedEventArgs.NewProtocol">
            <summary>
            Gets the new instance of <see cref="T:Kamilla.Network.Protocols.Protocol"/>.
            </summary>
        </member>
        <member name="T:Kamilla.Network.SpecialOpcodes">
            <summary>
            Defines opcode values with special meaning.
            </summary>
        </member>
        <member name="F:Kamilla.Network.SpecialOpcodes.UnknownOpcode">
            <summary>
            Defines an unknown opcode. This field is constant.
            </summary>
        </member>
        <member name="T:Kamilla.Network.Protocols.ProtocolManager">
            <summary>
            Provides an interface to manage loaded instance
            of <see cref="T:Kamilla.Network.Protocols.Protocol"/> class.
            </summary>
        </member>
        <member name="M:Kamilla.Network.Protocols.ProtocolManager.FindWrapper(System.String)">
            <summary>
            Finds a <see cref="T:Kamilla.Network.Protocols.Protocol"/> with the specified typename.
            </summary>
            <param name="typename">
            Typename of the <see cref="T:Kamilla.Network.Protocols.ProtocolWrapper"/>.
            </param>
            <returns>
            <see cref="T:Kamilla.Network.Protocols.ProtocolWrapper"/> of the
            specified <see cref="T:System.Type"/> if found; otherwise, null.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            typename is null.
            </exception>
        </member>
        <member name="M:Kamilla.Network.Protocols.ProtocolManager.FindWrapper(System.Type)">
            <summary>
            Finds a <see cref="T:Kamilla.Network.Protocols.Protocol"/> of the specified type.
            </summary>
            <param name="type">
            <see cref="T:System.Type"/> of the <see cref="T:Kamilla.Network.Protocols.ProtocolWrapper"/>.
            </param>
            <returns>
            <see cref="T:Kamilla.Network.Protocols.ProtocolWrapper"/> of the
            specified <see cref="T:System.Type"/> if found; otherwise, null.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            type is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            type is not subtype of <see cref="T:Kamilla.Network.Protocols.Protocol"/>
            </exception>
        </member>
        <member name="M:Kamilla.Network.Protocols.ProtocolManager.FindWrapper(System.Func{Kamilla.Network.Protocols.ProtocolWrapper,System.Boolean})">
            <summary>
            Finds a <see cref="T:Kamilla.Network.Protocols.ProtocolWrapper"/> matching the specified predicate.
            </summary>
            <param name="predicate">
            Predicate that should be matched.
            </param>
            <returns>
            An instance of <see cref="T:Kamilla.Network.Protocols.ProtocolWrapper"/> that
            matches the specified predicate, if found; otherwise, null.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            predicate is null.
            </exception>
        </member>
        <member name="M:Kamilla.Network.Protocols.ProtocolManager.Initialize">
            <summary>
            Initializes the <see cref="T:Kamilla.Network.Protocols.ProtocolManager"/>.
            </summary>
        </member>
        <member name="P:Kamilla.Network.Protocols.ProtocolManager.ProtocolWrappers">
            <summary>
            Gets the loaded instances of <see cref="T:Kamilla.Network.Protocols.ProtocolWrapper"/>.
            </summary>
        </member>
        <member name="T:Kamilla.Network.Logging.PacketAddedEventHandler">
            <summary>
            Handles an event that is fired when a
            <see cref="T:Kamilla.Network.Packet"/> is added to a storage.
            </summary>
            <param name="sender">
            The storage that the <see cref="T:Kamilla.Network.Packet"/> was added to.
            </param>
            <param name="e">
            An instance of <see cref="T:Kamilla.Network.Logging.PacketAddedEventArgs"/>
            class that contains the event data.
            </param>
        </member>
        <member name="T:Kamilla.Network.Logging.PacketAddedEventArgs">
            <summary>
            Contains data related to an event that is fired when a
            <see cref="T:Kamilla.Network.Packet"/> is added to a storage.
            </summary>
        </member>
        <member name="M:Kamilla.Network.Logging.PacketAddedEventArgs.#ctor(Kamilla.Network.Packet)">
            <summary>
            Initializes a new instance of <see cref="T:Kamilla.Network.Logging.PacketAddedEventArgs"/>
            class with the specified <see cref="T:Kamilla.Network.Packet"/>.
            </summary>
            <param name="packet">
            An instance of <see cref="T:Kamilla.Network.Packet"/> that was added to storage.
            </param>
        </member>
        <member name="P:Kamilla.Network.Logging.PacketAddedEventArgs.Packet">
            <summary>
            Gets a <see cref="T:Kamilla.Network.Packet"/> that was added to storage.
            </summary>
        </member>
        <member name="T:Kamilla.Network.IPacketWithOpcode">
            <summary>
            Extends the <see cref="T:Kamilla.Network.Packet"/> class allowing it to store opcode.
            </summary>
        </member>
        <member name="P:Kamilla.Network.IPacketWithOpcode.Opcode">
            <summary>
            Gets the opcode of the underlying packet.
            </summary>
        </member>
        <member name="T:Kamilla.LocalizedNameAttribute">
            <summary>
            Indicates which string of the enumeration's <see cref="T:System.Resources.ResourceManager"/>
            should be used as the localized name of the current enumeration member.
            </summary>
        </member>
        <member name="M:Kamilla.LocalizedNameAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Kamilla.LocalizedNameAttribute"/> class.
            </summary>
            <param name="key">
            The name of the string stored inside the enumeration's
            <see cref="T:System.Resources.ResourceManager"/> that
            should be used as the localized name of the current enumeration member.
            </param>
        </member>
        <member name="P:Kamilla.LocalizedNameAttribute.Key">
            <summary>
            Gets the name of the string stored inside the enumeration's
            <see cref="T:System.Resources.ResourceManager"/> that
            should be used as the localized name of the current enumeration member.
            </summary>
        </member>
    </members>
</doc>
